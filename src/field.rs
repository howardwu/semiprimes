use super::biginteger::BigInteger;
use super::utils::*;

use std::ops::{Add, Div, Mul, Neg, Sub};

#[doc = r" This is the modulus m of the prime field"]
const MODULUS: BigInteger =
    BigInteger([1879742710435601833u64, 5662575001400534140u64,
        620134381327554074u64, 13597518830383750187u64,
        8415074330512474431u64, 4992449896376186217u64,
        4357160119337039748u64, 1495376384012851639u64,
        17151942148337579050u64, 12357558747495424078u64,
        6554570550094355086u64, 15880003484844906937u64,
        4384071610805247356u64, 14253634282370805808u64,
        11402191966447328608u64, 11027635665810029165u64,
        8946368400722349061u64, 8946452214730489153u64,
        5850599900101300805u64, 502811665981613721u64,
        5184738167089221778u64, 2259723751226289719u64,
        535036862998571045u64, 1114347407410651356u64,
        16578718660615735141u64, 13826643606104601778u64,
        8178870445720744369u64, 6960171075992187301u64,
        16101362398927522610u64, 14681749014515128648u64,
        10711260214049763219u64, 12618425050404672493u64, 0u64]);

#[doc = r" The number of bits needed to represent the modulus."]
const MODULUS_BITS: u32 = 2048;

#[doc = r" The number of bits that must be shaved from the beginning of"]
#[doc = r" the representation when randomly sampling."]
const REPR_SHAVE_BITS: u32 = 64;

#[doc = r" 2^{limbs*64} mod m"]
const R: BigInteger =
    BigInteger([1805451721866153361u64, 16569968847982956337u64,
        16422673932086902204u64, 6236310669006061360u64,
        16051919398560178500u64, 3530924764212326065u64,
        17077599080462674319u64, 12644206596016832520u64,
        2759771058425992733u64, 15094875061093395557u64,
        5954716962976564346u64, 3051447650356820416u64,
        2747520729677888723u64, 13498301105903374997u64,
        14473084339464182885u64, 12902130777534640718u64,
        11853844241622913831u64, 774721355651134304u64,
        17974198918084649693u64, 6201229464650267658u64,
        1504663632347218194u64, 2250065378074306306u64,
        24966742813115479u64, 11306944812007554685u64,
        10915471881087903794u64, 3288982734882948573u64,
        15622432215125176724u64, 16422032687588642307u64,
        14685276417890043947u64, 10407600692326929553u64,
        17985599205431020455u64, 3218323848872670250u64, 0u64]);

#[doc = r" 2^{limbs*64*2} mod m"]
const R2: BigInteger =
    BigInteger([12020383747134829712u64, 8399978377399168221u64,
        5308254779345115019u64, 6882657535735015404u64,
        14353236251840717050u64, 1872531268241447855u64,
        10849148402742252534u64, 1577875374035171976u64,
        7343269389616571823u64, 709415488717686711u64,
        2096290894217925016u64, 9653806378574117974u64,
        15583451247435427448u64, 1524220412824093110u64,
        2788453912061032743u64, 15506121286059495428u64,
        8915823167065949872u64, 18440752576068885754u64,
        13867687319825319353u64, 13291967925042511067u64,
        2497116086317225521u64, 8781608574857399306u64,
        9023697272099730292u64, 6476265491433674810u64,
        4314080683352867602u64, 3735826964284190039u64,
        16468118697759281172u64, 6454343118745147930u64,
        4525994047770761079u64, 3341032664840911728u64,
        4322372068210901882u64, 11003212496330519731u64, 0u64]);

#[doc = r" -(m^{-1} mod m) mod m"]
const INV: u64 = 7615125230164175207;

#[doc = r" 2^s * t = MODULUS - 1 with t odd"]
const S: usize = 3;

#[derive(Debug)]
pub struct Fp(BigInteger);

impl Fp {
    #[inline]
    pub fn zero() -> Self {
        Fp(BigInteger::from(0))
    }

    #[inline]
    pub fn is_zero(&self) -> bool {
        self.0.is_zero()
    }

    #[inline]
    pub fn one() -> Self {
        Fp(R)
    }

    #[inline]
    pub fn is_one(&self) -> bool {
        self.0 == R
    }

    #[inline]
    pub fn add_assign(&mut self, other: &Fp) {
        self.0.add_nocarry(&other.0);
        self.reduce();
    }

    #[inline]
    pub fn double(&self) -> Self {
        let mut result = *self;
        result.double_assign();
        result
    }

    #[inline]
    pub fn double_assign(&mut self) {
        self.0.mul2(); self.reduce();
    }

    #[inline]
    pub fn sub_assign(&mut self, other: &Fp) {
        if other.0 > self.0 { self.0.add_nocarry(&MODULUS); }
        self.0.sub_noborrow(&other.0);
    }

    #[inline]
    pub fn negate(&mut self) {
        if !self.is_zero() {
            let mut tmp = MODULUS;
            tmp.sub_noborrow(&self.0);
            self.0 = tmp;
        }
    }

    #[inline]
    pub fn inverse(&self) -> Option<Self> {
        if self.is_zero() {
            None
        } else {
            let one = BigInteger::from(1);
            let mut u = self.0;
            let mut v = MODULUS;
            let mut b = Fp(R2);
            let mut c = Self::zero();
            while u != one && v != one {
                while u.is_even() {
                    u.div2();
                    if b.0.is_even() {
                        b.0.div2();
                    } else { b.0.add_nocarry(&MODULUS); b.0.div2(); }
                }
                while v.is_even() {
                    v.div2();
                    if c.0.is_even() {
                        c.0.div2();
                    } else { c.0.add_nocarry(&MODULUS); c.0.div2(); }
                }
                if v < u {
                    u.sub_noborrow(&v);
                    b.sub_assign(&c);
                } else { v.sub_noborrow(&u); c.sub_assign(&b); }
            }
            if u == one { Some(b) } else { Some(c) }
        }
    }

    /// Exponentiates this element by a number represented with `u64` limbs,
    /// least significant digit first.
    #[inline]
    pub fn pow<S: AsRef<[u64]>>(&self, exp: S) -> Self {
        let mut res = Self::one();

        let mut found_one = false;

        for i in BitIterator::new(exp) {
            if !found_one {
                if i {
                    found_one = true;
                } else {
                    continue;
                }
            }

            res.square_assign();

            if i {
                res = *self * res;
            }
        }
        res
    }

    pub fn from_repr(r: BigInteger) -> Result<Fp, ()> {
        let mut r = Fp(r);
        if r.is_valid() { r.mul_assign(&Fp(R2)); Ok(r) } else { Err(()) }
    }

    pub fn into_repr(&self) -> BigInteger {
        let mut r = *self;
        r.mont_reduce(
            (self.0).0[0usize],
            (self.0).0[1usize],
            (self.0).0[2usize],
            (self.0).0[3usize],
            (self.0).0[4usize],
            (self.0).0[5usize],
            (self.0).0[6usize],
            (self.0).0[7usize],
            (self.0).0[8usize],
            (self.0).0[9usize],
            (self.0).0[10usize],
            (self.0).0[11usize],
            (self.0).0[12usize],
            (self.0).0[13usize],
            (self.0).0[14usize],
            (self.0).0[15usize],
            (self.0).0[16usize],
            (self.0).0[17usize],
            (self.0).0[18usize],
            (self.0).0[19usize],
            (self.0).0[20usize],
            (self.0).0[21usize],
            (self.0).0[22usize],
            (self.0).0[23usize],
            (self.0).0[24usize],
            (self.0).0[25usize],
            (self.0).0[26usize],
            (self.0).0[27usize],
            (self.0).0[28usize],
            (self.0).0[29usize],
            (self.0).0[30usize],
            (self.0).0[31usize],
            (self.0).0[32usize],
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        r.0
    }

    pub fn char() -> BigInteger { MODULUS }

    pub fn num_bits() -> u32 { MODULUS_BITS }

    pub fn capacity() -> u32 { Self::num_bits() - 1 }

    pub fn s() -> usize { S }

    #[inline]
    pub fn mul_assign(&mut self, other: &Fp) {
        let mut carry = 0;
        let r0 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[0usize], &mut carry);
        let r1 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[1usize], &mut carry);
        let r2 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[2usize], &mut carry);
        let r3 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[3usize], &mut carry);
        let r4 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[4usize], &mut carry);
        let r5 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[5usize], &mut carry);
        let r6 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[6usize], &mut carry);
        let r7 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[7usize], &mut carry);
        let r8 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[8usize], &mut carry);
        let r9 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[9usize], &mut carry);
        let r10 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[10usize], &mut carry);
        let r11 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[11usize], &mut carry);
        let r12 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[12usize], &mut carry);
        let r13 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[13usize], &mut carry);
        let r14 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[14usize], &mut carry);
        let r15 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[15usize], &mut carry);
        let r16 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[16usize], &mut carry);
        let r17 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[17usize], &mut carry);
        let r18 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[18usize], &mut carry);
        let r19 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[19usize], &mut carry);
        let r20 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[20usize], &mut carry);
        let r21 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[21usize], &mut carry);
        let r22 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[22usize], &mut carry);
        let r23 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[23usize], &mut carry);
        let r24 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[24usize], &mut carry);
        let r25 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[25usize], &mut carry);
        let r26 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[26usize], &mut carry);
        let r27 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[27usize], &mut carry);
        let r28 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[28usize], &mut carry);
        let r29 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[29usize], &mut carry);
        let r30 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[30usize], &mut carry);
        let r31 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[31usize], &mut carry);
        let r32 = mac_with_carry(0, (self.0).0[0usize], (other.0).0[32usize], &mut carry);
        let r33 = carry;
        let mut carry = 0;
        let r1 = mac_with_carry(r1, (self.0).0[1usize], (other.0).0[0usize], &mut carry);
        let r2 = mac_with_carry(r2, (self.0).0[1usize], (other.0).0[1usize], &mut carry);
        let r3 = mac_with_carry(r3, (self.0).0[1usize], (other.0).0[2usize], &mut carry);
        let r4 = mac_with_carry(r4, (self.0).0[1usize], (other.0).0[3usize], &mut carry);
        let r5 = mac_with_carry(r5, (self.0).0[1usize], (other.0).0[4usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[1usize], (other.0).0[5usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[1usize], (other.0).0[6usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[1usize], (other.0).0[7usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[1usize], (other.0).0[8usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[1usize], (other.0).0[9usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[1usize], (other.0).0[10usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[1usize], (other.0).0[11usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[1usize], (other.0).0[12usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[1usize], (other.0).0[13usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[1usize], (other.0).0[14usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[1usize], (other.0).0[15usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[1usize], (other.0).0[16usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[1usize], (other.0).0[17usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[1usize], (other.0).0[18usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[1usize], (other.0).0[19usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[1usize], (other.0).0[20usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[1usize], (other.0).0[21usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[1usize], (other.0).0[22usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[1usize], (other.0).0[23usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[1usize], (other.0).0[24usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[1usize], (other.0).0[25usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[1usize], (other.0).0[26usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[1usize], (other.0).0[27usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[1usize], (other.0).0[28usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[1usize], (other.0).0[29usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[1usize], (other.0).0[30usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[1usize], (other.0).0[31usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[1usize], (other.0).0[32usize], &mut carry);
        let r34 = carry;
        let mut carry = 0;
        let r2 = mac_with_carry(r2, (self.0).0[2usize], (other.0).0[0usize], &mut carry);
        let r3 = mac_with_carry(r3, (self.0).0[2usize], (other.0).0[1usize], &mut carry);
        let r4 = mac_with_carry(r4, (self.0).0[2usize], (other.0).0[2usize], &mut carry);
        let r5 = mac_with_carry(r5, (self.0).0[2usize], (other.0).0[3usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[2usize], (other.0).0[4usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[2usize], (other.0).0[5usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[2usize], (other.0).0[6usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[2usize], (other.0).0[7usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[2usize], (other.0).0[8usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[2usize], (other.0).0[9usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[2usize], (other.0).0[10usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[2usize], (other.0).0[11usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[2usize], (other.0).0[12usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[2usize], (other.0).0[13usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[2usize], (other.0).0[14usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[2usize], (other.0).0[15usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[2usize], (other.0).0[16usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[2usize], (other.0).0[17usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[2usize], (other.0).0[18usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[2usize], (other.0).0[19usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[2usize], (other.0).0[20usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[2usize], (other.0).0[21usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[2usize], (other.0).0[22usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[2usize], (other.0).0[23usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[2usize], (other.0).0[24usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[2usize], (other.0).0[25usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[2usize], (other.0).0[26usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[2usize], (other.0).0[27usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[2usize], (other.0).0[28usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[2usize], (other.0).0[29usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[2usize], (other.0).0[30usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[2usize], (other.0).0[31usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[2usize], (other.0).0[32usize], &mut carry);
        let r35 = carry;
        let mut carry = 0;
        let r3 = mac_with_carry(r3, (self.0).0[3usize], (other.0).0[0usize], &mut carry);
        let r4 = mac_with_carry(r4, (self.0).0[3usize], (other.0).0[1usize], &mut carry);
        let r5 = mac_with_carry(r5, (self.0).0[3usize], (other.0).0[2usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[3usize], (other.0).0[3usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[3usize], (other.0).0[4usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[3usize], (other.0).0[5usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[3usize], (other.0).0[6usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[3usize], (other.0).0[7usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[3usize], (other.0).0[8usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[3usize], (other.0).0[9usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[3usize], (other.0).0[10usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[3usize], (other.0).0[11usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[3usize], (other.0).0[12usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[3usize], (other.0).0[13usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[3usize], (other.0).0[14usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[3usize], (other.0).0[15usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[3usize], (other.0).0[16usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[3usize], (other.0).0[17usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[3usize], (other.0).0[18usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[3usize], (other.0).0[19usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[3usize], (other.0).0[20usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[3usize], (other.0).0[21usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[3usize], (other.0).0[22usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[3usize], (other.0).0[23usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[3usize], (other.0).0[24usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[3usize], (other.0).0[25usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[3usize], (other.0).0[26usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[3usize], (other.0).0[27usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[3usize], (other.0).0[28usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[3usize], (other.0).0[29usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[3usize], (other.0).0[30usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[3usize], (other.0).0[31usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[3usize], (other.0).0[32usize], &mut carry);
        let r36 = carry;
        let mut carry = 0;
        let r4 = mac_with_carry(r4, (self.0).0[4usize], (other.0).0[0usize], &mut carry);
        let r5 = mac_with_carry(r5, (self.0).0[4usize], (other.0).0[1usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[4usize], (other.0).0[2usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[4usize], (other.0).0[3usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[4usize], (other.0).0[4usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[4usize], (other.0).0[5usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[4usize], (other.0).0[6usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[4usize], (other.0).0[7usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[4usize], (other.0).0[8usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[4usize], (other.0).0[9usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[4usize], (other.0).0[10usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[4usize], (other.0).0[11usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[4usize], (other.0).0[12usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[4usize], (other.0).0[13usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[4usize], (other.0).0[14usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[4usize], (other.0).0[15usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[4usize], (other.0).0[16usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[4usize], (other.0).0[17usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[4usize], (other.0).0[18usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[4usize], (other.0).0[19usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[4usize], (other.0).0[20usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[4usize], (other.0).0[21usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[4usize], (other.0).0[22usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[4usize], (other.0).0[23usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[4usize], (other.0).0[24usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[4usize], (other.0).0[25usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[4usize], (other.0).0[26usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[4usize], (other.0).0[27usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[4usize], (other.0).0[28usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[4usize], (other.0).0[29usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[4usize], (other.0).0[30usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[4usize], (other.0).0[31usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[4usize], (other.0).0[32usize], &mut carry);
        let r37 = carry;
        let mut carry = 0;
        let r5 = mac_with_carry(r5, (self.0).0[5usize], (other.0).0[0usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[5usize], (other.0).0[1usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[5usize], (other.0).0[2usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[5usize], (other.0).0[3usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[5usize], (other.0).0[4usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[5usize], (other.0).0[5usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[5usize], (other.0).0[6usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[5usize], (other.0).0[7usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[5usize], (other.0).0[8usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[5usize], (other.0).0[9usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[5usize], (other.0).0[10usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[5usize], (other.0).0[11usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[5usize], (other.0).0[12usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[5usize], (other.0).0[13usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[5usize], (other.0).0[14usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[5usize], (other.0).0[15usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[5usize], (other.0).0[16usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[5usize], (other.0).0[17usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[5usize], (other.0).0[18usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[5usize], (other.0).0[19usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[5usize], (other.0).0[20usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[5usize], (other.0).0[21usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[5usize], (other.0).0[22usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[5usize], (other.0).0[23usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[5usize], (other.0).0[24usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[5usize], (other.0).0[25usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[5usize], (other.0).0[26usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[5usize], (other.0).0[27usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[5usize], (other.0).0[28usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[5usize], (other.0).0[29usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[5usize], (other.0).0[30usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[5usize], (other.0).0[31usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[5usize], (other.0).0[32usize], &mut carry);
        let r38 = carry;
        let mut carry = 0;
        let r6 = mac_with_carry(r6, (self.0).0[6usize], (other.0).0[0usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[6usize], (other.0).0[1usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[6usize], (other.0).0[2usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[6usize], (other.0).0[3usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[6usize], (other.0).0[4usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[6usize], (other.0).0[5usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[6usize], (other.0).0[6usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[6usize], (other.0).0[7usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[6usize], (other.0).0[8usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[6usize], (other.0).0[9usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[6usize], (other.0).0[10usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[6usize], (other.0).0[11usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[6usize], (other.0).0[12usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[6usize], (other.0).0[13usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[6usize], (other.0).0[14usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[6usize], (other.0).0[15usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[6usize], (other.0).0[16usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[6usize], (other.0).0[17usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[6usize], (other.0).0[18usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[6usize], (other.0).0[19usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[6usize], (other.0).0[20usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[6usize], (other.0).0[21usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[6usize], (other.0).0[22usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[6usize], (other.0).0[23usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[6usize], (other.0).0[24usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[6usize], (other.0).0[25usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[6usize], (other.0).0[26usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[6usize], (other.0).0[27usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[6usize], (other.0).0[28usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[6usize], (other.0).0[29usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[6usize], (other.0).0[30usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[6usize], (other.0).0[31usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[6usize], (other.0).0[32usize], &mut carry);
        let r39 = carry;
        let mut carry = 0;
        let r7 = mac_with_carry(r7, (self.0).0[7usize], (other.0).0[0usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[7usize], (other.0).0[1usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[7usize], (other.0).0[2usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[7usize], (other.0).0[3usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[7usize], (other.0).0[4usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[7usize], (other.0).0[5usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[7usize], (other.0).0[6usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[7usize], (other.0).0[7usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[7usize], (other.0).0[8usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[7usize], (other.0).0[9usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[7usize], (other.0).0[10usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[7usize], (other.0).0[11usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[7usize], (other.0).0[12usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[7usize], (other.0).0[13usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[7usize], (other.0).0[14usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[7usize], (other.0).0[15usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[7usize], (other.0).0[16usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[7usize], (other.0).0[17usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[7usize], (other.0).0[18usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[7usize], (other.0).0[19usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[7usize], (other.0).0[20usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[7usize], (other.0).0[21usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[7usize], (other.0).0[22usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[7usize], (other.0).0[23usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[7usize], (other.0).0[24usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[7usize], (other.0).0[25usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[7usize], (other.0).0[26usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[7usize], (other.0).0[27usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[7usize], (other.0).0[28usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[7usize], (other.0).0[29usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[7usize], (other.0).0[30usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[7usize], (other.0).0[31usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[7usize], (other.0).0[32usize], &mut carry);
        let r40 = carry;
        let mut carry = 0;
        let r8 = mac_with_carry(r8, (self.0).0[8usize], (other.0).0[0usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[8usize], (other.0).0[1usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[8usize], (other.0).0[2usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[8usize], (other.0).0[3usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[8usize], (other.0).0[4usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[8usize], (other.0).0[5usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[8usize], (other.0).0[6usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[8usize], (other.0).0[7usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[8usize], (other.0).0[8usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[8usize], (other.0).0[9usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[8usize], (other.0).0[10usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[8usize], (other.0).0[11usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[8usize], (other.0).0[12usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[8usize], (other.0).0[13usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[8usize], (other.0).0[14usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[8usize], (other.0).0[15usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[8usize], (other.0).0[16usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[8usize], (other.0).0[17usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[8usize], (other.0).0[18usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[8usize], (other.0).0[19usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[8usize], (other.0).0[20usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[8usize], (other.0).0[21usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[8usize], (other.0).0[22usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[8usize], (other.0).0[23usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[8usize], (other.0).0[24usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[8usize], (other.0).0[25usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[8usize], (other.0).0[26usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[8usize], (other.0).0[27usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[8usize], (other.0).0[28usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[8usize], (other.0).0[29usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[8usize], (other.0).0[30usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[8usize], (other.0).0[31usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[8usize], (other.0).0[32usize], &mut carry);
        let r41 = carry;
        let mut carry = 0;
        let r9 = mac_with_carry(r9, (self.0).0[9usize], (other.0).0[0usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[9usize], (other.0).0[1usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[9usize], (other.0).0[2usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[9usize], (other.0).0[3usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[9usize], (other.0).0[4usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[9usize], (other.0).0[5usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[9usize], (other.0).0[6usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[9usize], (other.0).0[7usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[9usize], (other.0).0[8usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[9usize], (other.0).0[9usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[9usize], (other.0).0[10usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[9usize], (other.0).0[11usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[9usize], (other.0).0[12usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[9usize], (other.0).0[13usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[9usize], (other.0).0[14usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[9usize], (other.0).0[15usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[9usize], (other.0).0[16usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[9usize], (other.0).0[17usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[9usize], (other.0).0[18usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[9usize], (other.0).0[19usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[9usize], (other.0).0[20usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[9usize], (other.0).0[21usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[9usize], (other.0).0[22usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[9usize], (other.0).0[23usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[9usize], (other.0).0[24usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[9usize], (other.0).0[25usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[9usize], (other.0).0[26usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[9usize], (other.0).0[27usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[9usize], (other.0).0[28usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[9usize], (other.0).0[29usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[9usize], (other.0).0[30usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[9usize], (other.0).0[31usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[9usize], (other.0).0[32usize], &mut carry);
        let r42 = carry;
        let mut carry = 0;
        let r10 = mac_with_carry(r10, (self.0).0[10usize], (other.0).0[0usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[10usize], (other.0).0[1usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[10usize], (other.0).0[2usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[10usize], (other.0).0[3usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[10usize], (other.0).0[4usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[10usize], (other.0).0[5usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[10usize], (other.0).0[6usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[10usize], (other.0).0[7usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[10usize], (other.0).0[8usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[10usize], (other.0).0[9usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[10usize], (other.0).0[10usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[10usize], (other.0).0[11usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[10usize], (other.0).0[12usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[10usize], (other.0).0[13usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[10usize], (other.0).0[14usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[10usize], (other.0).0[15usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[10usize], (other.0).0[16usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[10usize], (other.0).0[17usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[10usize], (other.0).0[18usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[10usize], (other.0).0[19usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[10usize], (other.0).0[20usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[10usize], (other.0).0[21usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[10usize], (other.0).0[22usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[10usize], (other.0).0[23usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[10usize], (other.0).0[24usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[10usize], (other.0).0[25usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[10usize], (other.0).0[26usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[10usize], (other.0).0[27usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[10usize], (other.0).0[28usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[10usize], (other.0).0[29usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[10usize], (other.0).0[30usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[10usize], (other.0).0[31usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[10usize], (other.0).0[32usize], &mut carry);
        let r43 = carry;
        let mut carry = 0;
        let r11 = mac_with_carry(r11, (self.0).0[11usize], (other.0).0[0usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[11usize], (other.0).0[1usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[11usize], (other.0).0[2usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[11usize], (other.0).0[3usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[11usize], (other.0).0[4usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[11usize], (other.0).0[5usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[11usize], (other.0).0[6usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[11usize], (other.0).0[7usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[11usize], (other.0).0[8usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[11usize], (other.0).0[9usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[11usize], (other.0).0[10usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[11usize], (other.0).0[11usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[11usize], (other.0).0[12usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[11usize], (other.0).0[13usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[11usize], (other.0).0[14usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[11usize], (other.0).0[15usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[11usize], (other.0).0[16usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[11usize], (other.0).0[17usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[11usize], (other.0).0[18usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[11usize], (other.0).0[19usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[11usize], (other.0).0[20usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[11usize], (other.0).0[21usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[11usize], (other.0).0[22usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[11usize], (other.0).0[23usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[11usize], (other.0).0[24usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[11usize], (other.0).0[25usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[11usize], (other.0).0[26usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[11usize], (other.0).0[27usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[11usize], (other.0).0[28usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[11usize], (other.0).0[29usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[11usize], (other.0).0[30usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[11usize], (other.0).0[31usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[11usize], (other.0).0[32usize], &mut carry);
        let r44 = carry;
        let mut carry = 0;
        let r12 = mac_with_carry(r12, (self.0).0[12usize], (other.0).0[0usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[12usize], (other.0).0[1usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[12usize], (other.0).0[2usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[12usize], (other.0).0[3usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[12usize], (other.0).0[4usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[12usize], (other.0).0[5usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[12usize], (other.0).0[6usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[12usize], (other.0).0[7usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[12usize], (other.0).0[8usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[12usize], (other.0).0[9usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[12usize], (other.0).0[10usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[12usize], (other.0).0[11usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[12usize], (other.0).0[12usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[12usize], (other.0).0[13usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[12usize], (other.0).0[14usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[12usize], (other.0).0[15usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[12usize], (other.0).0[16usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[12usize], (other.0).0[17usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[12usize], (other.0).0[18usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[12usize], (other.0).0[19usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[12usize], (other.0).0[20usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[12usize], (other.0).0[21usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[12usize], (other.0).0[22usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[12usize], (other.0).0[23usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[12usize], (other.0).0[24usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[12usize], (other.0).0[25usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[12usize], (other.0).0[26usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[12usize], (other.0).0[27usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[12usize], (other.0).0[28usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[12usize], (other.0).0[29usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[12usize], (other.0).0[30usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[12usize], (other.0).0[31usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[12usize], (other.0).0[32usize], &mut carry);
        let r45 = carry;
        let mut carry = 0;
        let r13 = mac_with_carry(r13, (self.0).0[13usize], (other.0).0[0usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[13usize], (other.0).0[1usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[13usize], (other.0).0[2usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[13usize], (other.0).0[3usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[13usize], (other.0).0[4usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[13usize], (other.0).0[5usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[13usize], (other.0).0[6usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[13usize], (other.0).0[7usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[13usize], (other.0).0[8usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[13usize], (other.0).0[9usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[13usize], (other.0).0[10usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[13usize], (other.0).0[11usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[13usize], (other.0).0[12usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[13usize], (other.0).0[13usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[13usize], (other.0).0[14usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[13usize], (other.0).0[15usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[13usize], (other.0).0[16usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[13usize], (other.0).0[17usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[13usize], (other.0).0[18usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[13usize], (other.0).0[19usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[13usize], (other.0).0[20usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[13usize], (other.0).0[21usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[13usize], (other.0).0[22usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[13usize], (other.0).0[23usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[13usize], (other.0).0[24usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[13usize], (other.0).0[25usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[13usize], (other.0).0[26usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[13usize], (other.0).0[27usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[13usize], (other.0).0[28usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[13usize], (other.0).0[29usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[13usize], (other.0).0[30usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[13usize], (other.0).0[31usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[13usize], (other.0).0[32usize], &mut carry);
        let r46 = carry;
        let mut carry = 0;
        let r14 = mac_with_carry(r14, (self.0).0[14usize], (other.0).0[0usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[14usize], (other.0).0[1usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[14usize], (other.0).0[2usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[14usize], (other.0).0[3usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[14usize], (other.0).0[4usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[14usize], (other.0).0[5usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[14usize], (other.0).0[6usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[14usize], (other.0).0[7usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[14usize], (other.0).0[8usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[14usize], (other.0).0[9usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[14usize], (other.0).0[10usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[14usize], (other.0).0[11usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[14usize], (other.0).0[12usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[14usize], (other.0).0[13usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[14usize], (other.0).0[14usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[14usize], (other.0).0[15usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[14usize], (other.0).0[16usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[14usize], (other.0).0[17usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[14usize], (other.0).0[18usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[14usize], (other.0).0[19usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[14usize], (other.0).0[20usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[14usize], (other.0).0[21usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[14usize], (other.0).0[22usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[14usize], (other.0).0[23usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[14usize], (other.0).0[24usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[14usize], (other.0).0[25usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[14usize], (other.0).0[26usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[14usize], (other.0).0[27usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[14usize], (other.0).0[28usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[14usize], (other.0).0[29usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[14usize], (other.0).0[30usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[14usize], (other.0).0[31usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[14usize], (other.0).0[32usize], &mut carry);
        let r47 = carry;
        let mut carry = 0;
        let r15 = mac_with_carry(r15, (self.0).0[15usize], (other.0).0[0usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[15usize], (other.0).0[1usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[15usize], (other.0).0[2usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[15usize], (other.0).0[3usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[15usize], (other.0).0[4usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[15usize], (other.0).0[5usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[15usize], (other.0).0[6usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[15usize], (other.0).0[7usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[15usize], (other.0).0[8usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[15usize], (other.0).0[9usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[15usize], (other.0).0[10usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[15usize], (other.0).0[11usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[15usize], (other.0).0[12usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[15usize], (other.0).0[13usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[15usize], (other.0).0[14usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[15usize], (other.0).0[15usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[15usize], (other.0).0[16usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[15usize], (other.0).0[17usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[15usize], (other.0).0[18usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[15usize], (other.0).0[19usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[15usize], (other.0).0[20usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[15usize], (other.0).0[21usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[15usize], (other.0).0[22usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[15usize], (other.0).0[23usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[15usize], (other.0).0[24usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[15usize], (other.0).0[25usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[15usize], (other.0).0[26usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[15usize], (other.0).0[27usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[15usize], (other.0).0[28usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[15usize], (other.0).0[29usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[15usize], (other.0).0[30usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[15usize], (other.0).0[31usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[15usize], (other.0).0[32usize], &mut carry);
        let r48 = carry;
        let mut carry = 0;
        let r16 = mac_with_carry(r16, (self.0).0[16usize], (other.0).0[0usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[16usize], (other.0).0[1usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[16usize], (other.0).0[2usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[16usize], (other.0).0[3usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[16usize], (other.0).0[4usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[16usize], (other.0).0[5usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[16usize], (other.0).0[6usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[16usize], (other.0).0[7usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[16usize], (other.0).0[8usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[16usize], (other.0).0[9usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[16usize], (other.0).0[10usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[16usize], (other.0).0[11usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[16usize], (other.0).0[12usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[16usize], (other.0).0[13usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[16usize], (other.0).0[14usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[16usize], (other.0).0[15usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[16usize], (other.0).0[16usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[16usize], (other.0).0[17usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[16usize], (other.0).0[18usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[16usize], (other.0).0[19usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[16usize], (other.0).0[20usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[16usize], (other.0).0[21usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[16usize], (other.0).0[22usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[16usize], (other.0).0[23usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[16usize], (other.0).0[24usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[16usize], (other.0).0[25usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[16usize], (other.0).0[26usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[16usize], (other.0).0[27usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[16usize], (other.0).0[28usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[16usize], (other.0).0[29usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[16usize], (other.0).0[30usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[16usize], (other.0).0[31usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[16usize], (other.0).0[32usize], &mut carry);
        let r49 = carry;
        let mut carry = 0;
        let r17 = mac_with_carry(r17, (self.0).0[17usize], (other.0).0[0usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[17usize], (other.0).0[1usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[17usize], (other.0).0[2usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[17usize], (other.0).0[3usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[17usize], (other.0).0[4usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[17usize], (other.0).0[5usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[17usize], (other.0).0[6usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[17usize], (other.0).0[7usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[17usize], (other.0).0[8usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[17usize], (other.0).0[9usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[17usize], (other.0).0[10usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[17usize], (other.0).0[11usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[17usize], (other.0).0[12usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[17usize], (other.0).0[13usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[17usize], (other.0).0[14usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[17usize], (other.0).0[15usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[17usize], (other.0).0[16usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[17usize], (other.0).0[17usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[17usize], (other.0).0[18usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[17usize], (other.0).0[19usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[17usize], (other.0).0[20usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[17usize], (other.0).0[21usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[17usize], (other.0).0[22usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[17usize], (other.0).0[23usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[17usize], (other.0).0[24usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[17usize], (other.0).0[25usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[17usize], (other.0).0[26usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[17usize], (other.0).0[27usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[17usize], (other.0).0[28usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[17usize], (other.0).0[29usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[17usize], (other.0).0[30usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[17usize], (other.0).0[31usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[17usize], (other.0).0[32usize], &mut carry);
        let r50 = carry;
        let mut carry = 0;
        let r18 = mac_with_carry(r18, (self.0).0[18usize], (other.0).0[0usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[18usize], (other.0).0[1usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[18usize], (other.0).0[2usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[18usize], (other.0).0[3usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[18usize], (other.0).0[4usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[18usize], (other.0).0[5usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[18usize], (other.0).0[6usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[18usize], (other.0).0[7usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[18usize], (other.0).0[8usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[18usize], (other.0).0[9usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[18usize], (other.0).0[10usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[18usize], (other.0).0[11usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[18usize], (other.0).0[12usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[18usize], (other.0).0[13usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[18usize], (other.0).0[14usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[18usize], (other.0).0[15usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[18usize], (other.0).0[16usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[18usize], (other.0).0[17usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[18usize], (other.0).0[18usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[18usize], (other.0).0[19usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[18usize], (other.0).0[20usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[18usize], (other.0).0[21usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[18usize], (other.0).0[22usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[18usize], (other.0).0[23usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[18usize], (other.0).0[24usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[18usize], (other.0).0[25usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[18usize], (other.0).0[26usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[18usize], (other.0).0[27usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[18usize], (other.0).0[28usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[18usize], (other.0).0[29usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[18usize], (other.0).0[30usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[18usize], (other.0).0[31usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[18usize], (other.0).0[32usize], &mut carry);
        let r51 = carry;
        let mut carry = 0;
        let r19 = mac_with_carry(r19, (self.0).0[19usize], (other.0).0[0usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[19usize], (other.0).0[1usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[19usize], (other.0).0[2usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[19usize], (other.0).0[3usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[19usize], (other.0).0[4usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[19usize], (other.0).0[5usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[19usize], (other.0).0[6usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[19usize], (other.0).0[7usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[19usize], (other.0).0[8usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[19usize], (other.0).0[9usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[19usize], (other.0).0[10usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[19usize], (other.0).0[11usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[19usize], (other.0).0[12usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[19usize], (other.0).0[13usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[19usize], (other.0).0[14usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[19usize], (other.0).0[15usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[19usize], (other.0).0[16usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[19usize], (other.0).0[17usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[19usize], (other.0).0[18usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[19usize], (other.0).0[19usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[19usize], (other.0).0[20usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[19usize], (other.0).0[21usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[19usize], (other.0).0[22usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[19usize], (other.0).0[23usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[19usize], (other.0).0[24usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[19usize], (other.0).0[25usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[19usize], (other.0).0[26usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[19usize], (other.0).0[27usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[19usize], (other.0).0[28usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[19usize], (other.0).0[29usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[19usize], (other.0).0[30usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[19usize], (other.0).0[31usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[19usize], (other.0).0[32usize], &mut carry);
        let r52 = carry;
        let mut carry = 0;
        let r20 = mac_with_carry(r20, (self.0).0[20usize], (other.0).0[0usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[20usize], (other.0).0[1usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[20usize], (other.0).0[2usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[20usize], (other.0).0[3usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[20usize], (other.0).0[4usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[20usize], (other.0).0[5usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[20usize], (other.0).0[6usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[20usize], (other.0).0[7usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[20usize], (other.0).0[8usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[20usize], (other.0).0[9usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[20usize], (other.0).0[10usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[20usize], (other.0).0[11usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[20usize], (other.0).0[12usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[20usize], (other.0).0[13usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[20usize], (other.0).0[14usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[20usize], (other.0).0[15usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[20usize], (other.0).0[16usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[20usize], (other.0).0[17usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[20usize], (other.0).0[18usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[20usize], (other.0).0[19usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[20usize], (other.0).0[20usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[20usize], (other.0).0[21usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[20usize], (other.0).0[22usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[20usize], (other.0).0[23usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[20usize], (other.0).0[24usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[20usize], (other.0).0[25usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[20usize], (other.0).0[26usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[20usize], (other.0).0[27usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[20usize], (other.0).0[28usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[20usize], (other.0).0[29usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[20usize], (other.0).0[30usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[20usize], (other.0).0[31usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[20usize], (other.0).0[32usize], &mut carry);
        let r53 = carry;
        let mut carry = 0;
        let r21 = mac_with_carry(r21, (self.0).0[21usize], (other.0).0[0usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[21usize], (other.0).0[1usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[21usize], (other.0).0[2usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[21usize], (other.0).0[3usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[21usize], (other.0).0[4usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[21usize], (other.0).0[5usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[21usize], (other.0).0[6usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[21usize], (other.0).0[7usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[21usize], (other.0).0[8usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[21usize], (other.0).0[9usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[21usize], (other.0).0[10usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[21usize], (other.0).0[11usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[21usize], (other.0).0[12usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[21usize], (other.0).0[13usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[21usize], (other.0).0[14usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[21usize], (other.0).0[15usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[21usize], (other.0).0[16usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[21usize], (other.0).0[17usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[21usize], (other.0).0[18usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[21usize], (other.0).0[19usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[21usize], (other.0).0[20usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[21usize], (other.0).0[21usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[21usize], (other.0).0[22usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[21usize], (other.0).0[23usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[21usize], (other.0).0[24usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[21usize], (other.0).0[25usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[21usize], (other.0).0[26usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[21usize], (other.0).0[27usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[21usize], (other.0).0[28usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[21usize], (other.0).0[29usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[21usize], (other.0).0[30usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[21usize], (other.0).0[31usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[21usize], (other.0).0[32usize], &mut carry);
        let r54 = carry;
        let mut carry = 0;
        let r22 = mac_with_carry(r22, (self.0).0[22usize], (other.0).0[0usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[22usize], (other.0).0[1usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[22usize], (other.0).0[2usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[22usize], (other.0).0[3usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[22usize], (other.0).0[4usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[22usize], (other.0).0[5usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[22usize], (other.0).0[6usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[22usize], (other.0).0[7usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[22usize], (other.0).0[8usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[22usize], (other.0).0[9usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[22usize], (other.0).0[10usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[22usize], (other.0).0[11usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[22usize], (other.0).0[12usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[22usize], (other.0).0[13usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[22usize], (other.0).0[14usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[22usize], (other.0).0[15usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[22usize], (other.0).0[16usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[22usize], (other.0).0[17usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[22usize], (other.0).0[18usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[22usize], (other.0).0[19usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[22usize], (other.0).0[20usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[22usize], (other.0).0[21usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[22usize], (other.0).0[22usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[22usize], (other.0).0[23usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[22usize], (other.0).0[24usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[22usize], (other.0).0[25usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[22usize], (other.0).0[26usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[22usize], (other.0).0[27usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[22usize], (other.0).0[28usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[22usize], (other.0).0[29usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[22usize], (other.0).0[30usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[22usize], (other.0).0[31usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[22usize], (other.0).0[32usize], &mut carry);
        let r55 = carry;
        let mut carry = 0;
        let r23 = mac_with_carry(r23, (self.0).0[23usize], (other.0).0[0usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[23usize], (other.0).0[1usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[23usize], (other.0).0[2usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[23usize], (other.0).0[3usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[23usize], (other.0).0[4usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[23usize], (other.0).0[5usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[23usize], (other.0).0[6usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[23usize], (other.0).0[7usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[23usize], (other.0).0[8usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[23usize], (other.0).0[9usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[23usize], (other.0).0[10usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[23usize], (other.0).0[11usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[23usize], (other.0).0[12usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[23usize], (other.0).0[13usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[23usize], (other.0).0[14usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[23usize], (other.0).0[15usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[23usize], (other.0).0[16usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[23usize], (other.0).0[17usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[23usize], (other.0).0[18usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[23usize], (other.0).0[19usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[23usize], (other.0).0[20usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[23usize], (other.0).0[21usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[23usize], (other.0).0[22usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[23usize], (other.0).0[23usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[23usize], (other.0).0[24usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[23usize], (other.0).0[25usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[23usize], (other.0).0[26usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[23usize], (other.0).0[27usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[23usize], (other.0).0[28usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[23usize], (other.0).0[29usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[23usize], (other.0).0[30usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[23usize], (other.0).0[31usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[23usize], (other.0).0[32usize], &mut carry);
        let r56 = carry;
        let mut carry = 0;
        let r24 = mac_with_carry(r24, (self.0).0[24usize], (other.0).0[0usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[24usize], (other.0).0[1usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[24usize], (other.0).0[2usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[24usize], (other.0).0[3usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[24usize], (other.0).0[4usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[24usize], (other.0).0[5usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[24usize], (other.0).0[6usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[24usize], (other.0).0[7usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[24usize], (other.0).0[8usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[24usize], (other.0).0[9usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[24usize], (other.0).0[10usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[24usize], (other.0).0[11usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[24usize], (other.0).0[12usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[24usize], (other.0).0[13usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[24usize], (other.0).0[14usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[24usize], (other.0).0[15usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[24usize], (other.0).0[16usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[24usize], (other.0).0[17usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[24usize], (other.0).0[18usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[24usize], (other.0).0[19usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[24usize], (other.0).0[20usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[24usize], (other.0).0[21usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[24usize], (other.0).0[22usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[24usize], (other.0).0[23usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[24usize], (other.0).0[24usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[24usize], (other.0).0[25usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[24usize], (other.0).0[26usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[24usize], (other.0).0[27usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[24usize], (other.0).0[28usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[24usize], (other.0).0[29usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[24usize], (other.0).0[30usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[24usize], (other.0).0[31usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[24usize], (other.0).0[32usize], &mut carry);
        let r57 = carry;
        let mut carry = 0;
        let r25 = mac_with_carry(r25, (self.0).0[25usize], (other.0).0[0usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[25usize], (other.0).0[1usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[25usize], (other.0).0[2usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[25usize], (other.0).0[3usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[25usize], (other.0).0[4usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[25usize], (other.0).0[5usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[25usize], (other.0).0[6usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[25usize], (other.0).0[7usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[25usize], (other.0).0[8usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[25usize], (other.0).0[9usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[25usize], (other.0).0[10usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[25usize], (other.0).0[11usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[25usize], (other.0).0[12usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[25usize], (other.0).0[13usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[25usize], (other.0).0[14usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[25usize], (other.0).0[15usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[25usize], (other.0).0[16usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[25usize], (other.0).0[17usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[25usize], (other.0).0[18usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[25usize], (other.0).0[19usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[25usize], (other.0).0[20usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[25usize], (other.0).0[21usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[25usize], (other.0).0[22usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[25usize], (other.0).0[23usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[25usize], (other.0).0[24usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[25usize], (other.0).0[25usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[25usize], (other.0).0[26usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[25usize], (other.0).0[27usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[25usize], (other.0).0[28usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[25usize], (other.0).0[29usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[25usize], (other.0).0[30usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[25usize], (other.0).0[31usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[25usize], (other.0).0[32usize], &mut carry);
        let r58 = carry;
        let mut carry = 0;
        let r26 = mac_with_carry(r26, (self.0).0[26usize], (other.0).0[0usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[26usize], (other.0).0[1usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[26usize], (other.0).0[2usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[26usize], (other.0).0[3usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[26usize], (other.0).0[4usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[26usize], (other.0).0[5usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[26usize], (other.0).0[6usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[26usize], (other.0).0[7usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[26usize], (other.0).0[8usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[26usize], (other.0).0[9usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[26usize], (other.0).0[10usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[26usize], (other.0).0[11usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[26usize], (other.0).0[12usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[26usize], (other.0).0[13usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[26usize], (other.0).0[14usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[26usize], (other.0).0[15usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[26usize], (other.0).0[16usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[26usize], (other.0).0[17usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[26usize], (other.0).0[18usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[26usize], (other.0).0[19usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[26usize], (other.0).0[20usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[26usize], (other.0).0[21usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[26usize], (other.0).0[22usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[26usize], (other.0).0[23usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[26usize], (other.0).0[24usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[26usize], (other.0).0[25usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[26usize], (other.0).0[26usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[26usize], (other.0).0[27usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[26usize], (other.0).0[28usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[26usize], (other.0).0[29usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[26usize], (other.0).0[30usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[26usize], (other.0).0[31usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[26usize], (other.0).0[32usize], &mut carry);
        let r59 = carry;
        let mut carry = 0;
        let r27 = mac_with_carry(r27, (self.0).0[27usize], (other.0).0[0usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[27usize], (other.0).0[1usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[27usize], (other.0).0[2usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[27usize], (other.0).0[3usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[27usize], (other.0).0[4usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[27usize], (other.0).0[5usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[27usize], (other.0).0[6usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[27usize], (other.0).0[7usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[27usize], (other.0).0[8usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[27usize], (other.0).0[9usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[27usize], (other.0).0[10usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[27usize], (other.0).0[11usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[27usize], (other.0).0[12usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[27usize], (other.0).0[13usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[27usize], (other.0).0[14usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[27usize], (other.0).0[15usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[27usize], (other.0).0[16usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[27usize], (other.0).0[17usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[27usize], (other.0).0[18usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[27usize], (other.0).0[19usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[27usize], (other.0).0[20usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[27usize], (other.0).0[21usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[27usize], (other.0).0[22usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[27usize], (other.0).0[23usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[27usize], (other.0).0[24usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[27usize], (other.0).0[25usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[27usize], (other.0).0[26usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[27usize], (other.0).0[27usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[27usize], (other.0).0[28usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[27usize], (other.0).0[29usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[27usize], (other.0).0[30usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[27usize], (other.0).0[31usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[27usize], (other.0).0[32usize], &mut carry);
        let r60 = carry;
        let mut carry = 0;
        let r28 = mac_with_carry(r28, (self.0).0[28usize], (other.0).0[0usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[28usize], (other.0).0[1usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[28usize], (other.0).0[2usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[28usize], (other.0).0[3usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[28usize], (other.0).0[4usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[28usize], (other.0).0[5usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[28usize], (other.0).0[6usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[28usize], (other.0).0[7usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[28usize], (other.0).0[8usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[28usize], (other.0).0[9usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[28usize], (other.0).0[10usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[28usize], (other.0).0[11usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[28usize], (other.0).0[12usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[28usize], (other.0).0[13usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[28usize], (other.0).0[14usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[28usize], (other.0).0[15usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[28usize], (other.0).0[16usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[28usize], (other.0).0[17usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[28usize], (other.0).0[18usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[28usize], (other.0).0[19usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[28usize], (other.0).0[20usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[28usize], (other.0).0[21usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[28usize], (other.0).0[22usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[28usize], (other.0).0[23usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[28usize], (other.0).0[24usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[28usize], (other.0).0[25usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[28usize], (other.0).0[26usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[28usize], (other.0).0[27usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[28usize], (other.0).0[28usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[28usize], (other.0).0[29usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[28usize], (other.0).0[30usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[28usize], (other.0).0[31usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[28usize], (other.0).0[32usize], &mut carry);
        let r61 = carry;
        let mut carry = 0;
        let r29 = mac_with_carry(r29, (self.0).0[29usize], (other.0).0[0usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[29usize], (other.0).0[1usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[29usize], (other.0).0[2usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[29usize], (other.0).0[3usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[29usize], (other.0).0[4usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[29usize], (other.0).0[5usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[29usize], (other.0).0[6usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[29usize], (other.0).0[7usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[29usize], (other.0).0[8usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[29usize], (other.0).0[9usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[29usize], (other.0).0[10usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[29usize], (other.0).0[11usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[29usize], (other.0).0[12usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[29usize], (other.0).0[13usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[29usize], (other.0).0[14usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[29usize], (other.0).0[15usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[29usize], (other.0).0[16usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[29usize], (other.0).0[17usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[29usize], (other.0).0[18usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[29usize], (other.0).0[19usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[29usize], (other.0).0[20usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[29usize], (other.0).0[21usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[29usize], (other.0).0[22usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[29usize], (other.0).0[23usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[29usize], (other.0).0[24usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[29usize], (other.0).0[25usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[29usize], (other.0).0[26usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[29usize], (other.0).0[27usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[29usize], (other.0).0[28usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[29usize], (other.0).0[29usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[29usize], (other.0).0[30usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[29usize], (other.0).0[31usize], &mut carry);
        let r61 = mac_with_carry(r61, (self.0).0[29usize], (other.0).0[32usize], &mut carry);
        let r62 = carry;
        let mut carry = 0;
        let r30 = mac_with_carry(r30, (self.0).0[30usize], (other.0).0[0usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[30usize], (other.0).0[1usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[30usize], (other.0).0[2usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[30usize], (other.0).0[3usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[30usize], (other.0).0[4usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[30usize], (other.0).0[5usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[30usize], (other.0).0[6usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[30usize], (other.0).0[7usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[30usize], (other.0).0[8usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[30usize], (other.0).0[9usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[30usize], (other.0).0[10usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[30usize], (other.0).0[11usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[30usize], (other.0).0[12usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[30usize], (other.0).0[13usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[30usize], (other.0).0[14usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[30usize], (other.0).0[15usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[30usize], (other.0).0[16usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[30usize], (other.0).0[17usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[30usize], (other.0).0[18usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[30usize], (other.0).0[19usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[30usize], (other.0).0[20usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[30usize], (other.0).0[21usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[30usize], (other.0).0[22usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[30usize], (other.0).0[23usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[30usize], (other.0).0[24usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[30usize], (other.0).0[25usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[30usize], (other.0).0[26usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[30usize], (other.0).0[27usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[30usize], (other.0).0[28usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[30usize], (other.0).0[29usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[30usize], (other.0).0[30usize], &mut carry);
        let r61 = mac_with_carry(r61, (self.0).0[30usize], (other.0).0[31usize], &mut carry);
        let r62 = mac_with_carry(r62, (self.0).0[30usize], (other.0).0[32usize], &mut carry);
        let r63 = carry;
        let mut carry = 0;
        let r31 = mac_with_carry(r31, (self.0).0[31usize], (other.0).0[0usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[31usize], (other.0).0[1usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[31usize], (other.0).0[2usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[31usize], (other.0).0[3usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[31usize], (other.0).0[4usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[31usize], (other.0).0[5usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[31usize], (other.0).0[6usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[31usize], (other.0).0[7usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[31usize], (other.0).0[8usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[31usize], (other.0).0[9usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[31usize], (other.0).0[10usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[31usize], (other.0).0[11usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[31usize], (other.0).0[12usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[31usize], (other.0).0[13usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[31usize], (other.0).0[14usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[31usize], (other.0).0[15usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[31usize], (other.0).0[16usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[31usize], (other.0).0[17usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[31usize], (other.0).0[18usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[31usize], (other.0).0[19usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[31usize], (other.0).0[20usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[31usize], (other.0).0[21usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[31usize], (other.0).0[22usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[31usize], (other.0).0[23usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[31usize], (other.0).0[24usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[31usize], (other.0).0[25usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[31usize], (other.0).0[26usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[31usize], (other.0).0[27usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[31usize], (other.0).0[28usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[31usize], (other.0).0[29usize], &mut carry);
        let r61 = mac_with_carry(r61, (self.0).0[31usize], (other.0).0[30usize], &mut carry);
        let r62 = mac_with_carry(r62, (self.0).0[31usize], (other.0).0[31usize], &mut carry);
        let r63 = mac_with_carry(r63, (self.0).0[31usize], (other.0).0[32usize], &mut carry);
        let r64 = carry;
        let mut carry = 0;
        let r32 = mac_with_carry(r32, (self.0).0[32usize], (other.0).0[0usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[32usize], (other.0).0[1usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[32usize], (other.0).0[2usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[32usize], (other.0).0[3usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[32usize], (other.0).0[4usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[32usize], (other.0).0[5usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[32usize], (other.0).0[6usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[32usize], (other.0).0[7usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[32usize], (other.0).0[8usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[32usize], (other.0).0[9usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[32usize], (other.0).0[10usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[32usize], (other.0).0[11usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[32usize], (other.0).0[12usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[32usize], (other.0).0[13usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[32usize], (other.0).0[14usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[32usize], (other.0).0[15usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[32usize], (other.0).0[16usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[32usize], (other.0).0[17usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[32usize], (other.0).0[18usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[32usize], (other.0).0[19usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[32usize], (other.0).0[20usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[32usize], (other.0).0[21usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[32usize], (other.0).0[22usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[32usize], (other.0).0[23usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[32usize], (other.0).0[24usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[32usize], (other.0).0[25usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[32usize], (other.0).0[26usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[32usize], (other.0).0[27usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[32usize], (other.0).0[28usize], &mut carry);
        let r61 = mac_with_carry(r61, (self.0).0[32usize], (other.0).0[29usize], &mut carry);
        let r62 = mac_with_carry(r62, (self.0).0[32usize], (other.0).0[30usize], &mut carry);
        let r63 = mac_with_carry(r63, (self.0).0[32usize], (other.0).0[31usize], &mut carry);
        let r64 = mac_with_carry(r64, (self.0).0[32usize], (other.0).0[32usize], &mut carry);
        let r65 = carry;
        self.mont_reduce(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11,
                         r12, r13, r14, r15, r16, r17, r18, r19, r20, r21,
                         r22, r23, r24, r25, r26, r27, r28, r29, r30, r31,
                         r32, r33, r34, r35, r36, r37, r38, r39, r40, r41,
                         r42, r43, r44, r45, r46, r47, r48, r49, r50, r51,
                         r52, r53, r54, r55, r56, r57, r58, r59, r60, r61,
                         r62, r63, r64, r65);
    }

    #[inline]
    pub fn square(&self) -> Self {
        let mut result = self.clone();
        result.square_assign();
        result
    }

    #[inline]
    pub fn square_assign(&mut self) {
        let mut carry = 0;
        let r1 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[1usize], &mut carry);
        let r2 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[2usize], &mut carry);
        let r3 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[3usize], &mut carry);
        let r4 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[4usize], &mut carry);
        let r5 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[5usize], &mut carry);
        let r6 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[6usize], &mut carry);
        let r7 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[7usize], &mut carry);
        let r8 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[8usize], &mut carry);
        let r9 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[9usize], &mut carry);
        let r10 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[10usize], &mut carry);
        let r11 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[11usize], &mut carry);
        let r12 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[12usize], &mut carry);
        let r13 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[13usize], &mut carry);
        let r14 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[14usize], &mut carry);
        let r15 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[15usize], &mut carry);
        let r16 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[16usize], &mut carry);
        let r17 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[17usize], &mut carry);
        let r18 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[18usize], &mut carry);
        let r19 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[19usize], &mut carry);
        let r20 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[20usize], &mut carry);
        let r21 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[21usize], &mut carry);
        let r22 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[22usize], &mut carry);
        let r23 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[23usize], &mut carry);
        let r24 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[24usize], &mut carry);
        let r25 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[25usize], &mut carry);
        let r26 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[26usize], &mut carry);
        let r27 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[27usize], &mut carry);
        let r28 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[28usize], &mut carry);
        let r29 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[29usize], &mut carry);
        let r30 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[30usize], &mut carry);
        let r31 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[31usize], &mut carry);
        let r32 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[32usize], &mut carry);
        let r33 = carry;
        let mut carry = 0;
        let r3 = mac_with_carry(r3, (self.0).0[1usize], (self.0).0[2usize], &mut carry);
        let r4 = mac_with_carry(r4, (self.0).0[1usize], (self.0).0[3usize], &mut carry);
        let r5 = mac_with_carry(r5, (self.0).0[1usize], (self.0).0[4usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[1usize], (self.0).0[5usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[1usize], (self.0).0[6usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[1usize], (self.0).0[7usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[1usize], (self.0).0[8usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[1usize], (self.0).0[9usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[1usize], (self.0).0[10usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[1usize], (self.0).0[11usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[1usize], (self.0).0[12usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[1usize], (self.0).0[13usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[1usize], (self.0).0[14usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[1usize], (self.0).0[15usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[1usize], (self.0).0[16usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[1usize], (self.0).0[17usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[1usize], (self.0).0[18usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[1usize], (self.0).0[19usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[1usize], (self.0).0[20usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[1usize], (self.0).0[21usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[1usize], (self.0).0[22usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[1usize], (self.0).0[23usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[1usize], (self.0).0[24usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[1usize], (self.0).0[25usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[1usize], (self.0).0[26usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[1usize], (self.0).0[27usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[1usize], (self.0).0[28usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[1usize], (self.0).0[29usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[1usize], (self.0).0[30usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[1usize], (self.0).0[31usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[1usize], (self.0).0[32usize], &mut carry);
        let r34 = carry;
        let mut carry = 0;
        let r5 = mac_with_carry(r5, (self.0).0[2usize], (self.0).0[3usize], &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[2usize], (self.0).0[4usize], &mut carry);
        let r7 = mac_with_carry(r7, (self.0).0[2usize], (self.0).0[5usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[2usize], (self.0).0[6usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[2usize], (self.0).0[7usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[2usize], (self.0).0[8usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[2usize], (self.0).0[9usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[2usize], (self.0).0[10usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[2usize], (self.0).0[11usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[2usize], (self.0).0[12usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[2usize], (self.0).0[13usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[2usize], (self.0).0[14usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[2usize], (self.0).0[15usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[2usize], (self.0).0[16usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[2usize], (self.0).0[17usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[2usize], (self.0).0[18usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[2usize], (self.0).0[19usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[2usize], (self.0).0[20usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[2usize], (self.0).0[21usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[2usize], (self.0).0[22usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[2usize], (self.0).0[23usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[2usize], (self.0).0[24usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[2usize], (self.0).0[25usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[2usize], (self.0).0[26usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[2usize], (self.0).0[27usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[2usize], (self.0).0[28usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[2usize], (self.0).0[29usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[2usize], (self.0).0[30usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[2usize], (self.0).0[31usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[2usize], (self.0).0[32usize], &mut carry);
        let r35 = carry;
        let mut carry = 0;
        let r7 = mac_with_carry(r7, (self.0).0[3usize], (self.0).0[4usize], &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[3usize], (self.0).0[5usize], &mut carry);
        let r9 = mac_with_carry(r9, (self.0).0[3usize], (self.0).0[6usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[3usize], (self.0).0[7usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[3usize], (self.0).0[8usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[3usize], (self.0).0[9usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[3usize], (self.0).0[10usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[3usize], (self.0).0[11usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[3usize], (self.0).0[12usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[3usize], (self.0).0[13usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[3usize], (self.0).0[14usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[3usize], (self.0).0[15usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[3usize], (self.0).0[16usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[3usize], (self.0).0[17usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[3usize], (self.0).0[18usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[3usize], (self.0).0[19usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[3usize], (self.0).0[20usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[3usize], (self.0).0[21usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[3usize], (self.0).0[22usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[3usize], (self.0).0[23usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[3usize], (self.0).0[24usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[3usize], (self.0).0[25usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[3usize], (self.0).0[26usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[3usize], (self.0).0[27usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[3usize], (self.0).0[28usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[3usize], (self.0).0[29usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[3usize], (self.0).0[30usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[3usize], (self.0).0[31usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[3usize], (self.0).0[32usize], &mut carry);
        let r36 = carry;
        let mut carry = 0;
        let r9 = mac_with_carry(r9, (self.0).0[4usize], (self.0).0[5usize], &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[4usize], (self.0).0[6usize], &mut carry);
        let r11 = mac_with_carry(r11, (self.0).0[4usize], (self.0).0[7usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[4usize], (self.0).0[8usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[4usize], (self.0).0[9usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[4usize], (self.0).0[10usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[4usize], (self.0).0[11usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[4usize], (self.0).0[12usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[4usize], (self.0).0[13usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[4usize], (self.0).0[14usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[4usize], (self.0).0[15usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[4usize], (self.0).0[16usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[4usize], (self.0).0[17usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[4usize], (self.0).0[18usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[4usize], (self.0).0[19usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[4usize], (self.0).0[20usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[4usize], (self.0).0[21usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[4usize], (self.0).0[22usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[4usize], (self.0).0[23usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[4usize], (self.0).0[24usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[4usize], (self.0).0[25usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[4usize], (self.0).0[26usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[4usize], (self.0).0[27usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[4usize], (self.0).0[28usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[4usize], (self.0).0[29usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[4usize], (self.0).0[30usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[4usize], (self.0).0[31usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[4usize], (self.0).0[32usize], &mut carry);
        let r37 = carry;
        let mut carry = 0;
        let r11 = mac_with_carry(r11, (self.0).0[5usize], (self.0).0[6usize], &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[5usize], (self.0).0[7usize], &mut carry);
        let r13 = mac_with_carry(r13, (self.0).0[5usize], (self.0).0[8usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[5usize], (self.0).0[9usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[5usize], (self.0).0[10usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[5usize], (self.0).0[11usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[5usize], (self.0).0[12usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[5usize], (self.0).0[13usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[5usize], (self.0).0[14usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[5usize], (self.0).0[15usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[5usize], (self.0).0[16usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[5usize], (self.0).0[17usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[5usize], (self.0).0[18usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[5usize], (self.0).0[19usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[5usize], (self.0).0[20usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[5usize], (self.0).0[21usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[5usize], (self.0).0[22usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[5usize], (self.0).0[23usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[5usize], (self.0).0[24usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[5usize], (self.0).0[25usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[5usize], (self.0).0[26usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[5usize], (self.0).0[27usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[5usize], (self.0).0[28usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[5usize], (self.0).0[29usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[5usize], (self.0).0[30usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[5usize], (self.0).0[31usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[5usize], (self.0).0[32usize], &mut carry);
        let r38 = carry;
        let mut carry = 0;
        let r13 = mac_with_carry(r13, (self.0).0[6usize], (self.0).0[7usize], &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[6usize], (self.0).0[8usize], &mut carry);
        let r15 = mac_with_carry(r15, (self.0).0[6usize], (self.0).0[9usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[6usize], (self.0).0[10usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[6usize], (self.0).0[11usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[6usize], (self.0).0[12usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[6usize], (self.0).0[13usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[6usize], (self.0).0[14usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[6usize], (self.0).0[15usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[6usize], (self.0).0[16usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[6usize], (self.0).0[17usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[6usize], (self.0).0[18usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[6usize], (self.0).0[19usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[6usize], (self.0).0[20usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[6usize], (self.0).0[21usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[6usize], (self.0).0[22usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[6usize], (self.0).0[23usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[6usize], (self.0).0[24usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[6usize], (self.0).0[25usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[6usize], (self.0).0[26usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[6usize], (self.0).0[27usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[6usize], (self.0).0[28usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[6usize], (self.0).0[29usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[6usize], (self.0).0[30usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[6usize], (self.0).0[31usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[6usize], (self.0).0[32usize], &mut carry);
        let r39 = carry;
        let mut carry = 0;
        let r15 = mac_with_carry(r15, (self.0).0[7usize], (self.0).0[8usize], &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[7usize], (self.0).0[9usize], &mut carry);
        let r17 = mac_with_carry(r17, (self.0).0[7usize], (self.0).0[10usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[7usize], (self.0).0[11usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[7usize], (self.0).0[12usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[7usize], (self.0).0[13usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[7usize], (self.0).0[14usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[7usize], (self.0).0[15usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[7usize], (self.0).0[16usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[7usize], (self.0).0[17usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[7usize], (self.0).0[18usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[7usize], (self.0).0[19usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[7usize], (self.0).0[20usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[7usize], (self.0).0[21usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[7usize], (self.0).0[22usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[7usize], (self.0).0[23usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[7usize], (self.0).0[24usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[7usize], (self.0).0[25usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[7usize], (self.0).0[26usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[7usize], (self.0).0[27usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[7usize], (self.0).0[28usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[7usize], (self.0).0[29usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[7usize], (self.0).0[30usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[7usize], (self.0).0[31usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[7usize], (self.0).0[32usize], &mut carry);
        let r40 = carry;
        let mut carry = 0;
        let r17 = mac_with_carry(r17, (self.0).0[8usize], (self.0).0[9usize], &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[8usize], (self.0).0[10usize], &mut carry);
        let r19 = mac_with_carry(r19, (self.0).0[8usize], (self.0).0[11usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[8usize], (self.0).0[12usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[8usize], (self.0).0[13usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[8usize], (self.0).0[14usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[8usize], (self.0).0[15usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[8usize], (self.0).0[16usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[8usize], (self.0).0[17usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[8usize], (self.0).0[18usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[8usize], (self.0).0[19usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[8usize], (self.0).0[20usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[8usize], (self.0).0[21usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[8usize], (self.0).0[22usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[8usize], (self.0).0[23usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[8usize], (self.0).0[24usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[8usize], (self.0).0[25usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[8usize], (self.0).0[26usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[8usize], (self.0).0[27usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[8usize], (self.0).0[28usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[8usize], (self.0).0[29usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[8usize], (self.0).0[30usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[8usize], (self.0).0[31usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[8usize], (self.0).0[32usize], &mut carry);
        let r41 = carry;
        let mut carry = 0;
        let r19 = mac_with_carry(r19, (self.0).0[9usize], (self.0).0[10usize], &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[9usize], (self.0).0[11usize], &mut carry);
        let r21 = mac_with_carry(r21, (self.0).0[9usize], (self.0).0[12usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[9usize], (self.0).0[13usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[9usize], (self.0).0[14usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[9usize], (self.0).0[15usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[9usize], (self.0).0[16usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[9usize], (self.0).0[17usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[9usize], (self.0).0[18usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[9usize], (self.0).0[19usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[9usize], (self.0).0[20usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[9usize], (self.0).0[21usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[9usize], (self.0).0[22usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[9usize], (self.0).0[23usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[9usize], (self.0).0[24usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[9usize], (self.0).0[25usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[9usize], (self.0).0[26usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[9usize], (self.0).0[27usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[9usize], (self.0).0[28usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[9usize], (self.0).0[29usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[9usize], (self.0).0[30usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[9usize], (self.0).0[31usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[9usize], (self.0).0[32usize], &mut carry);
        let r42 = carry;
        let mut carry = 0;
        let r21 = mac_with_carry(r21, (self.0).0[10usize], (self.0).0[11usize], &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[10usize], (self.0).0[12usize], &mut carry);
        let r23 = mac_with_carry(r23, (self.0).0[10usize], (self.0).0[13usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[10usize], (self.0).0[14usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[10usize], (self.0).0[15usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[10usize], (self.0).0[16usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[10usize], (self.0).0[17usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[10usize], (self.0).0[18usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[10usize], (self.0).0[19usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[10usize], (self.0).0[20usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[10usize], (self.0).0[21usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[10usize], (self.0).0[22usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[10usize], (self.0).0[23usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[10usize], (self.0).0[24usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[10usize], (self.0).0[25usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[10usize], (self.0).0[26usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[10usize], (self.0).0[27usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[10usize], (self.0).0[28usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[10usize], (self.0).0[29usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[10usize], (self.0).0[30usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[10usize], (self.0).0[31usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[10usize], (self.0).0[32usize], &mut carry);
        let r43 = carry;
        let mut carry = 0;
        let r23 = mac_with_carry(r23, (self.0).0[11usize], (self.0).0[12usize], &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[11usize], (self.0).0[13usize], &mut carry);
        let r25 = mac_with_carry(r25, (self.0).0[11usize], (self.0).0[14usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[11usize], (self.0).0[15usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[11usize], (self.0).0[16usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[11usize], (self.0).0[17usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[11usize], (self.0).0[18usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[11usize], (self.0).0[19usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[11usize], (self.0).0[20usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[11usize], (self.0).0[21usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[11usize], (self.0).0[22usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[11usize], (self.0).0[23usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[11usize], (self.0).0[24usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[11usize], (self.0).0[25usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[11usize], (self.0).0[26usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[11usize], (self.0).0[27usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[11usize], (self.0).0[28usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[11usize], (self.0).0[29usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[11usize], (self.0).0[30usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[11usize], (self.0).0[31usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[11usize], (self.0).0[32usize], &mut carry);
        let r44 = carry;
        let mut carry = 0;
        let r25 = mac_with_carry(r25, (self.0).0[12usize], (self.0).0[13usize], &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[12usize], (self.0).0[14usize], &mut carry);
        let r27 = mac_with_carry(r27, (self.0).0[12usize], (self.0).0[15usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[12usize], (self.0).0[16usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[12usize], (self.0).0[17usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[12usize], (self.0).0[18usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[12usize], (self.0).0[19usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[12usize], (self.0).0[20usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[12usize], (self.0).0[21usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[12usize], (self.0).0[22usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[12usize], (self.0).0[23usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[12usize], (self.0).0[24usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[12usize], (self.0).0[25usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[12usize], (self.0).0[26usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[12usize], (self.0).0[27usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[12usize], (self.0).0[28usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[12usize], (self.0).0[29usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[12usize], (self.0).0[30usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[12usize], (self.0).0[31usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[12usize], (self.0).0[32usize], &mut carry);
        let r45 = carry;
        let mut carry = 0;
        let r27 = mac_with_carry(r27, (self.0).0[13usize], (self.0).0[14usize], &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[13usize], (self.0).0[15usize], &mut carry);
        let r29 = mac_with_carry(r29, (self.0).0[13usize], (self.0).0[16usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[13usize], (self.0).0[17usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[13usize], (self.0).0[18usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[13usize], (self.0).0[19usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[13usize], (self.0).0[20usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[13usize], (self.0).0[21usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[13usize], (self.0).0[22usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[13usize], (self.0).0[23usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[13usize], (self.0).0[24usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[13usize], (self.0).0[25usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[13usize], (self.0).0[26usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[13usize], (self.0).0[27usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[13usize], (self.0).0[28usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[13usize], (self.0).0[29usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[13usize], (self.0).0[30usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[13usize], (self.0).0[31usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[13usize], (self.0).0[32usize], &mut carry);
        let r46 = carry;
        let mut carry = 0;
        let r29 = mac_with_carry(r29, (self.0).0[14usize], (self.0).0[15usize], &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[14usize], (self.0).0[16usize], &mut carry);
        let r31 = mac_with_carry(r31, (self.0).0[14usize], (self.0).0[17usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[14usize], (self.0).0[18usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[14usize], (self.0).0[19usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[14usize], (self.0).0[20usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[14usize], (self.0).0[21usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[14usize], (self.0).0[22usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[14usize], (self.0).0[23usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[14usize], (self.0).0[24usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[14usize], (self.0).0[25usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[14usize], (self.0).0[26usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[14usize], (self.0).0[27usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[14usize], (self.0).0[28usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[14usize], (self.0).0[29usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[14usize], (self.0).0[30usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[14usize], (self.0).0[31usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[14usize], (self.0).0[32usize], &mut carry);
        let r47 = carry;
        let mut carry = 0;
        let r31 = mac_with_carry(r31, (self.0).0[15usize], (self.0).0[16usize], &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[15usize], (self.0).0[17usize], &mut carry);
        let r33 = mac_with_carry(r33, (self.0).0[15usize], (self.0).0[18usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[15usize], (self.0).0[19usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[15usize], (self.0).0[20usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[15usize], (self.0).0[21usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[15usize], (self.0).0[22usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[15usize], (self.0).0[23usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[15usize], (self.0).0[24usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[15usize], (self.0).0[25usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[15usize], (self.0).0[26usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[15usize], (self.0).0[27usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[15usize], (self.0).0[28usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[15usize], (self.0).0[29usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[15usize], (self.0).0[30usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[15usize], (self.0).0[31usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[15usize], (self.0).0[32usize], &mut carry);
        let r48 = carry;
        let mut carry = 0;
        let r33 = mac_with_carry(r33, (self.0).0[16usize], (self.0).0[17usize], &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[16usize], (self.0).0[18usize], &mut carry);
        let r35 = mac_with_carry(r35, (self.0).0[16usize], (self.0).0[19usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[16usize], (self.0).0[20usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[16usize], (self.0).0[21usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[16usize], (self.0).0[22usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[16usize], (self.0).0[23usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[16usize], (self.0).0[24usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[16usize], (self.0).0[25usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[16usize], (self.0).0[26usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[16usize], (self.0).0[27usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[16usize], (self.0).0[28usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[16usize], (self.0).0[29usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[16usize], (self.0).0[30usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[16usize], (self.0).0[31usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[16usize], (self.0).0[32usize], &mut carry);
        let r49 = carry;
        let mut carry = 0;
        let r35 = mac_with_carry(r35, (self.0).0[17usize], (self.0).0[18usize], &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[17usize], (self.0).0[19usize], &mut carry);
        let r37 = mac_with_carry(r37, (self.0).0[17usize], (self.0).0[20usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[17usize], (self.0).0[21usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[17usize], (self.0).0[22usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[17usize], (self.0).0[23usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[17usize], (self.0).0[24usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[17usize], (self.0).0[25usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[17usize], (self.0).0[26usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[17usize], (self.0).0[27usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[17usize], (self.0).0[28usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[17usize], (self.0).0[29usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[17usize], (self.0).0[30usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[17usize], (self.0).0[31usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[17usize], (self.0).0[32usize], &mut carry);
        let r50 = carry;
        let mut carry = 0;
        let r37 = mac_with_carry(r37, (self.0).0[18usize], (self.0).0[19usize], &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[18usize], (self.0).0[20usize], &mut carry);
        let r39 = mac_with_carry(r39, (self.0).0[18usize], (self.0).0[21usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[18usize], (self.0).0[22usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[18usize], (self.0).0[23usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[18usize], (self.0).0[24usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[18usize], (self.0).0[25usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[18usize], (self.0).0[26usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[18usize], (self.0).0[27usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[18usize], (self.0).0[28usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[18usize], (self.0).0[29usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[18usize], (self.0).0[30usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[18usize], (self.0).0[31usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[18usize], (self.0).0[32usize], &mut carry);
        let r51 = carry;
        let mut carry = 0;
        let r39 = mac_with_carry(r39, (self.0).0[19usize], (self.0).0[20usize], &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[19usize], (self.0).0[21usize], &mut carry);
        let r41 = mac_with_carry(r41, (self.0).0[19usize], (self.0).0[22usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[19usize], (self.0).0[23usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[19usize], (self.0).0[24usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[19usize], (self.0).0[25usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[19usize], (self.0).0[26usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[19usize], (self.0).0[27usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[19usize], (self.0).0[28usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[19usize], (self.0).0[29usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[19usize], (self.0).0[30usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[19usize], (self.0).0[31usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[19usize], (self.0).0[32usize], &mut carry);
        let r52 = carry;
        let mut carry = 0;
        let r41 = mac_with_carry(r41, (self.0).0[20usize], (self.0).0[21usize], &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[20usize], (self.0).0[22usize], &mut carry);
        let r43 = mac_with_carry(r43, (self.0).0[20usize], (self.0).0[23usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[20usize], (self.0).0[24usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[20usize], (self.0).0[25usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[20usize], (self.0).0[26usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[20usize], (self.0).0[27usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[20usize], (self.0).0[28usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[20usize], (self.0).0[29usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[20usize], (self.0).0[30usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[20usize], (self.0).0[31usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[20usize], (self.0).0[32usize], &mut carry);
        let r53 = carry;
        let mut carry = 0;
        let r43 = mac_with_carry(r43, (self.0).0[21usize], (self.0).0[22usize], &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[21usize], (self.0).0[23usize], &mut carry);
        let r45 = mac_with_carry(r45, (self.0).0[21usize], (self.0).0[24usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[21usize], (self.0).0[25usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[21usize], (self.0).0[26usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[21usize], (self.0).0[27usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[21usize], (self.0).0[28usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[21usize], (self.0).0[29usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[21usize], (self.0).0[30usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[21usize], (self.0).0[31usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[21usize], (self.0).0[32usize], &mut carry);
        let r54 = carry;
        let mut carry = 0;
        let r45 = mac_with_carry(r45, (self.0).0[22usize], (self.0).0[23usize], &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[22usize], (self.0).0[24usize], &mut carry);
        let r47 = mac_with_carry(r47, (self.0).0[22usize], (self.0).0[25usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[22usize], (self.0).0[26usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[22usize], (self.0).0[27usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[22usize], (self.0).0[28usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[22usize], (self.0).0[29usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[22usize], (self.0).0[30usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[22usize], (self.0).0[31usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[22usize], (self.0).0[32usize], &mut carry);
        let r55 = carry;
        let mut carry = 0;
        let r47 = mac_with_carry(r47, (self.0).0[23usize], (self.0).0[24usize], &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[23usize], (self.0).0[25usize], &mut carry);
        let r49 = mac_with_carry(r49, (self.0).0[23usize], (self.0).0[26usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[23usize], (self.0).0[27usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[23usize], (self.0).0[28usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[23usize], (self.0).0[29usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[23usize], (self.0).0[30usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[23usize], (self.0).0[31usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[23usize], (self.0).0[32usize], &mut carry);
        let r56 = carry;
        let mut carry = 0;
        let r49 = mac_with_carry(r49, (self.0).0[24usize], (self.0).0[25usize], &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[24usize], (self.0).0[26usize], &mut carry);
        let r51 = mac_with_carry(r51, (self.0).0[24usize], (self.0).0[27usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[24usize], (self.0).0[28usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[24usize], (self.0).0[29usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[24usize], (self.0).0[30usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[24usize], (self.0).0[31usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[24usize], (self.0).0[32usize], &mut carry);
        let r57 = carry;
        let mut carry = 0;
        let r51 = mac_with_carry(r51, (self.0).0[25usize], (self.0).0[26usize], &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[25usize], (self.0).0[27usize], &mut carry);
        let r53 = mac_with_carry(r53, (self.0).0[25usize], (self.0).0[28usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[25usize], (self.0).0[29usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[25usize], (self.0).0[30usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[25usize], (self.0).0[31usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[25usize], (self.0).0[32usize], &mut carry);
        let r58 = carry;
        let mut carry = 0;
        let r53 = mac_with_carry(r53, (self.0).0[26usize], (self.0).0[27usize], &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[26usize], (self.0).0[28usize], &mut carry);
        let r55 = mac_with_carry(r55, (self.0).0[26usize], (self.0).0[29usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[26usize], (self.0).0[30usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[26usize], (self.0).0[31usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[26usize], (self.0).0[32usize], &mut carry);
        let r59 = carry;
        let mut carry = 0;
        let r55 = mac_with_carry(r55, (self.0).0[27usize], (self.0).0[28usize], &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[27usize], (self.0).0[29usize], &mut carry);
        let r57 = mac_with_carry(r57, (self.0).0[27usize], (self.0).0[30usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[27usize], (self.0).0[31usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[27usize], (self.0).0[32usize], &mut carry);
        let r60 = carry;
        let mut carry = 0;
        let r57 = mac_with_carry(r57, (self.0).0[28usize], (self.0).0[29usize], &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[28usize], (self.0).0[30usize], &mut carry);
        let r59 = mac_with_carry(r59, (self.0).0[28usize], (self.0).0[31usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[28usize], (self.0).0[32usize], &mut carry);
        let r61 = carry;
        let mut carry = 0;
        let r59 = mac_with_carry(r59, (self.0).0[29usize], (self.0).0[30usize], &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[29usize], (self.0).0[31usize], &mut carry);
        let r61 = mac_with_carry(r61, (self.0).0[29usize], (self.0).0[32usize], &mut carry);
        let r62 = carry;
        let mut carry = 0;
        let r61 = mac_with_carry(r61, (self.0).0[30usize], (self.0).0[31usize], &mut carry);
        let r62 = mac_with_carry(r62, (self.0).0[30usize], (self.0).0[32usize], &mut carry);
        let r63 = carry;
        let mut carry = 0;
        let r63 = mac_with_carry(r63, (self.0).0[31usize], (self.0).0[32usize], &mut carry);
        let r64 = carry;
        let tmp0 = r1 >> 63;
        let r1 = r1 << 1;
        let tmp1 = r2 >> 63;
        let r2 = r2 << 1;
        let r2 = r2 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r3 >> 63;
        let r3 = r3 << 1;
        let r3 = r3 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r4 >> 63;
        let r4 = r4 << 1;
        let r4 = r4 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r5 >> 63;
        let r5 = r5 << 1;
        let r5 = r5 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r6 >> 63;
        let r6 = r6 << 1;
        let r6 = r6 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r7 >> 63;
        let r7 = r7 << 1;
        let r7 = r7 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r8 >> 63;
        let r8 = r8 << 1;
        let r8 = r8 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r9 >> 63;
        let r9 = r9 << 1;
        let r9 = r9 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r10 >> 63;
        let r10 = r10 << 1;
        let r10 = r10 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r11 >> 63;
        let r11 = r11 << 1;
        let r11 = r11 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r12 >> 63;
        let r12 = r12 << 1;
        let r12 = r12 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r13 >> 63;
        let r13 = r13 << 1;
        let r13 = r13 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r14 >> 63;
        let r14 = r14 << 1;
        let r14 = r14 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r15 >> 63;
        let r15 = r15 << 1;
        let r15 = r15 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r16 >> 63;
        let r16 = r16 << 1;
        let r16 = r16 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r17 >> 63;
        let r17 = r17 << 1;
        let r17 = r17 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r18 >> 63;
        let r18 = r18 << 1;
        let r18 = r18 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r19 >> 63;
        let r19 = r19 << 1;
        let r19 = r19 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r20 >> 63;
        let r20 = r20 << 1;
        let r20 = r20 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r21 >> 63;
        let r21 = r21 << 1;
        let r21 = r21 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r22 >> 63;
        let r22 = r22 << 1;
        let r22 = r22 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r23 >> 63;
        let r23 = r23 << 1;
        let r23 = r23 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r24 >> 63;
        let r24 = r24 << 1;
        let r24 = r24 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r25 >> 63;
        let r25 = r25 << 1;
        let r25 = r25 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r26 >> 63;
        let r26 = r26 << 1;
        let r26 = r26 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r27 >> 63;
        let r27 = r27 << 1;
        let r27 = r27 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r28 >> 63;
        let r28 = r28 << 1;
        let r28 = r28 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r29 >> 63;
        let r29 = r29 << 1;
        let r29 = r29 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r30 >> 63;
        let r30 = r30 << 1;
        let r30 = r30 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r31 >> 63;
        let r31 = r31 << 1;
        let r31 = r31 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r32 >> 63;
        let r32 = r32 << 1;
        let r32 = r32 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r33 >> 63;
        let r33 = r33 << 1;
        let r33 = r33 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r34 >> 63;
        let r34 = r34 << 1;
        let r34 = r34 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r35 >> 63;
        let r35 = r35 << 1;
        let r35 = r35 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r36 >> 63;
        let r36 = r36 << 1;
        let r36 = r36 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r37 >> 63;
        let r37 = r37 << 1;
        let r37 = r37 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r38 >> 63;
        let r38 = r38 << 1;
        let r38 = r38 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r39 >> 63;
        let r39 = r39 << 1;
        let r39 = r39 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r40 >> 63;
        let r40 = r40 << 1;
        let r40 = r40 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r41 >> 63;
        let r41 = r41 << 1;
        let r41 = r41 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r42 >> 63;
        let r42 = r42 << 1;
        let r42 = r42 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r43 >> 63;
        let r43 = r43 << 1;
        let r43 = r43 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r44 >> 63;
        let r44 = r44 << 1;
        let r44 = r44 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r45 >> 63;
        let r45 = r45 << 1;
        let r45 = r45 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r46 >> 63;
        let r46 = r46 << 1;
        let r46 = r46 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r47 >> 63;
        let r47 = r47 << 1;
        let r47 = r47 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r48 >> 63;
        let r48 = r48 << 1;
        let r48 = r48 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r49 >> 63;
        let r49 = r49 << 1;
        let r49 = r49 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r50 >> 63;
        let r50 = r50 << 1;
        let r50 = r50 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r51 >> 63;
        let r51 = r51 << 1;
        let r51 = r51 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r52 >> 63;
        let r52 = r52 << 1;
        let r52 = r52 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r53 >> 63;
        let r53 = r53 << 1;
        let r53 = r53 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r54 >> 63;
        let r54 = r54 << 1;
        let r54 = r54 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r55 >> 63;
        let r55 = r55 << 1;
        let r55 = r55 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r56 >> 63;
        let r56 = r56 << 1;
        let r56 = r56 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r57 >> 63;
        let r57 = r57 << 1;
        let r57 = r57 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r58 >> 63;
        let r58 = r58 << 1;
        let r58 = r58 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r59 >> 63;
        let r59 = r59 << 1;
        let r59 = r59 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r60 >> 63;
        let r60 = r60 << 1;
        let r60 = r60 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r61 >> 63;
        let r61 = r61 << 1;
        let r61 = r61 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r62 >> 63;
        let r62 = r62 << 1;
        let r62 = r62 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r63 >> 63;
        let r63 = r63 << 1;
        let r63 = r63 | tmp0;
        let tmp0 = tmp1;
        let tmp1 = r64 >> 63;
        let r64 = r64 << 1;
        let r64 = r64 | tmp0;
        let tmp0 = tmp1;
        let r65 = tmp0;
        let mut carry = 0;
        let r0 = mac_with_carry(0, (self.0).0[0usize], (self.0).0[0usize], &mut carry);
        let r1 = adc(r1, 0, &mut carry);
        let r2 = mac_with_carry(r2, (self.0).0[1usize], (self.0).0[1usize], &mut carry);
        let r3 = adc(r3, 0, &mut carry);
        let r4 = mac_with_carry(r4, (self.0).0[2usize], (self.0).0[2usize], &mut carry);
        let r5 = adc(r5, 0, &mut carry);
        let r6 = mac_with_carry(r6, (self.0).0[3usize], (self.0).0[3usize], &mut carry);
        let r7 = adc(r7, 0, &mut carry);
        let r8 = mac_with_carry(r8, (self.0).0[4usize], (self.0).0[4usize], &mut carry);
        let r9 = adc(r9, 0, &mut carry);
        let r10 = mac_with_carry(r10, (self.0).0[5usize], (self.0).0[5usize], &mut carry);
        let r11 = adc(r11, 0, &mut carry);
        let r12 = mac_with_carry(r12, (self.0).0[6usize], (self.0).0[6usize], &mut carry);
        let r13 = adc(r13, 0, &mut carry);
        let r14 = mac_with_carry(r14, (self.0).0[7usize], (self.0).0[7usize], &mut carry);
        let r15 = adc(r15, 0, &mut carry);
        let r16 = mac_with_carry(r16, (self.0).0[8usize], (self.0).0[8usize], &mut carry);
        let r17 = adc(r17, 0, &mut carry);
        let r18 = mac_with_carry(r18, (self.0).0[9usize], (self.0).0[9usize], &mut carry);
        let r19 = adc(r19, 0, &mut carry);
        let r20 = mac_with_carry(r20, (self.0).0[10usize], (self.0).0[10usize], &mut carry);
        let r21 = adc(r21, 0, &mut carry);
        let r22 = mac_with_carry(r22, (self.0).0[11usize], (self.0).0[11usize], &mut carry);
        let r23 = adc(r23, 0, &mut carry);
        let r24 = mac_with_carry(r24, (self.0).0[12usize], (self.0).0[12usize], &mut carry);
        let r25 = adc(r25, 0, &mut carry);
        let r26 = mac_with_carry(r26, (self.0).0[13usize], (self.0).0[13usize], &mut carry);
        let r27 = adc(r27, 0, &mut carry);
        let r28 = mac_with_carry(r28, (self.0).0[14usize], (self.0).0[14usize], &mut carry);
        let r29 = adc(r29, 0, &mut carry);
        let r30 = mac_with_carry(r30, (self.0).0[15usize], (self.0).0[15usize], &mut carry);
        let r31 = adc(r31, 0, &mut carry);
        let r32 = mac_with_carry(r32, (self.0).0[16usize], (self.0).0[16usize], &mut carry);
        let r33 = adc(r33, 0, &mut carry);
        let r34 = mac_with_carry(r34, (self.0).0[17usize], (self.0).0[17usize], &mut carry);
        let r35 = adc(r35, 0, &mut carry);
        let r36 = mac_with_carry(r36, (self.0).0[18usize], (self.0).0[18usize], &mut carry);
        let r37 = adc(r37, 0, &mut carry);
        let r38 = mac_with_carry(r38, (self.0).0[19usize], (self.0).0[19usize], &mut carry);
        let r39 = adc(r39, 0, &mut carry);
        let r40 = mac_with_carry(r40, (self.0).0[20usize], (self.0).0[20usize], &mut carry);
        let r41 = adc(r41, 0, &mut carry);
        let r42 = mac_with_carry(r42, (self.0).0[21usize], (self.0).0[21usize], &mut carry);
        let r43 = adc(r43, 0, &mut carry);
        let r44 = mac_with_carry(r44, (self.0).0[22usize], (self.0).0[22usize], &mut carry);
        let r45 = adc(r45, 0, &mut carry);
        let r46 = mac_with_carry(r46, (self.0).0[23usize], (self.0).0[23usize], &mut carry);
        let r47 = adc(r47, 0, &mut carry);
        let r48 = mac_with_carry(r48, (self.0).0[24usize], (self.0).0[24usize], &mut carry);
        let r49 = adc(r49, 0, &mut carry);
        let r50 = mac_with_carry(r50, (self.0).0[25usize], (self.0).0[25usize], &mut carry);
        let r51 = adc(r51, 0, &mut carry);
        let r52 = mac_with_carry(r52, (self.0).0[26usize], (self.0).0[26usize], &mut carry);
        let r53 = adc(r53, 0, &mut carry);
        let r54 = mac_with_carry(r54, (self.0).0[27usize], (self.0).0[27usize], &mut carry);
        let r55 = adc(r55, 0, &mut carry);
        let r56 = mac_with_carry(r56, (self.0).0[28usize], (self.0).0[28usize], &mut carry);
        let r57 = adc(r57, 0, &mut carry);
        let r58 = mac_with_carry(r58, (self.0).0[29usize], (self.0).0[29usize], &mut carry);
        let r59 = adc(r59, 0, &mut carry);
        let r60 = mac_with_carry(r60, (self.0).0[30usize], (self.0).0[30usize], &mut carry);
        let r61 = adc(r61, 0, &mut carry);
        let r62 = mac_with_carry(r62, (self.0).0[31usize], (self.0).0[31usize], &mut carry);
        let r63 = adc(r63, 0, &mut carry);
        let r64 = mac_with_carry(r64, (self.0).0[32usize], (self.0).0[32usize], &mut carry);
        let r65 = adc(r65, 0, &mut carry);
        self.mont_reduce(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11,
                         r12, r13, r14, r15, r16, r17, r18, r19, r20, r21,
                         r22, r23, r24, r25, r26, r27, r28, r29, r30, r31,
                         r32, r33, r34, r35, r36, r37, r38, r39, r40, r41,
                         r42, r43, r44, r45, r46, r47, r48, r49, r50, r51,
                         r52, r53, r54, r55, r56, r57, r58, r59, r60, r61,
                         r62, r63, r64, r65);
    }

    #[doc =
    r" Determines if the element is really in the field. This is only used"]
    #[doc = r" internally."]
    #[inline(always)]
    pub fn is_valid(&self) -> bool { self.0 < MODULUS }

    #[doc =
    r" Subtracts the modulus from this element if this element is not in the"]
    #[doc = r" field. Only used interally."]
    #[inline(always)]
    pub fn reduce(&mut self) {
        if !self.is_valid() { self.0.sub_noborrow(&MODULUS); }
    }

    #[inline(always)]
    pub fn mont_reduce(&mut self, r0: u64, mut r1: u64, mut r2: u64, mut r3: u64,
                   mut r4: u64, mut r5: u64, mut r6: u64, mut r7: u64,
                   mut r8: u64, mut r9: u64, mut r10: u64, mut r11: u64,
                   mut r12: u64, mut r13: u64, mut r14: u64, mut r15: u64,
                   mut r16: u64, mut r17: u64, mut r18: u64, mut r19: u64,
                   mut r20: u64, mut r21: u64, mut r22: u64, mut r23: u64,
                   mut r24: u64, mut r25: u64, mut r26: u64, mut r27: u64,
                   mut r28: u64, mut r29: u64, mut r30: u64, mut r31: u64,
                   mut r32: u64, mut r33: u64, mut r34: u64, mut r35: u64,
                   mut r36: u64, mut r37: u64, mut r38: u64, mut r39: u64,
                   mut r40: u64, mut r41: u64, mut r42: u64, mut r43: u64,
                   mut r44: u64, mut r45: u64, mut r46: u64, mut r47: u64,
                   mut r48: u64, mut r49: u64, mut r50: u64, mut r51: u64,
                   mut r52: u64, mut r53: u64, mut r54: u64, mut r55: u64,
                   mut r56: u64, mut r57: u64, mut r58: u64, mut r59: u64,
                   mut r60: u64, mut r61: u64, mut r62: u64, mut r63: u64,
                   mut r64: u64, mut r65: u64) {
        let k = r0.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r0, k, MODULUS.0[0], &mut carry);
        r1 = mac_with_carry(r1, k, MODULUS.0[1usize], &mut carry);
        r2 = mac_with_carry(r2, k, MODULUS.0[2usize], &mut carry);
        r3 = mac_with_carry(r3, k, MODULUS.0[3usize], &mut carry);
        r4 = mac_with_carry(r4, k, MODULUS.0[4usize], &mut carry);
        r5 = mac_with_carry(r5, k, MODULUS.0[5usize], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[6usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[7usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[8usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[9usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[10usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[11usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[12usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[13usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[14usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[15usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[16usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[17usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[18usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[19usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[20usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[21usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[22usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[23usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[24usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[25usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[26usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[27usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[28usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[29usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[30usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[31usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[32usize], &mut carry);
        r33 = adc(r33, 0, &mut carry);
        let carry2 = carry;
        let k = r1.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r1, k, MODULUS.0[0], &mut carry);
        r2 = mac_with_carry(r2, k, MODULUS.0[1usize], &mut carry);
        r3 = mac_with_carry(r3, k, MODULUS.0[2usize], &mut carry);
        r4 = mac_with_carry(r4, k, MODULUS.0[3usize], &mut carry);
        r5 = mac_with_carry(r5, k, MODULUS.0[4usize], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[5usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[6usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[7usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[8usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[9usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[10usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[11usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[12usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[13usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[14usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[15usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[16usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[17usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[18usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[19usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[20usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[21usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[22usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[23usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[24usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[25usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[26usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[27usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[28usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[29usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[30usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[31usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[32usize], &mut carry);
        r34 = adc(r34, carry2, &mut carry);
        let carry2 = carry;
        let k = r2.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r2, k, MODULUS.0[0], &mut carry);
        r3 = mac_with_carry(r3, k, MODULUS.0[1usize], &mut carry);
        r4 = mac_with_carry(r4, k, MODULUS.0[2usize], &mut carry);
        r5 = mac_with_carry(r5, k, MODULUS.0[3usize], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[4usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[5usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[6usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[7usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[8usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[9usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[10usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[11usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[12usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[13usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[14usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[15usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[16usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[17usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[18usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[19usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[20usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[21usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[22usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[23usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[24usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[25usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[26usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[27usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[28usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[29usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[30usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[31usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[32usize], &mut carry);
        r35 = adc(r35, carry2, &mut carry);
        let carry2 = carry;
        let k = r3.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r3, k, MODULUS.0[0], &mut carry);
        r4 = mac_with_carry(r4, k, MODULUS.0[1usize], &mut carry);
        r5 = mac_with_carry(r5, k, MODULUS.0[2usize], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[3usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[4usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[5usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[6usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[7usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[8usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[9usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[10usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[11usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[12usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[13usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[14usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[15usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[16usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[17usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[18usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[19usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[20usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[21usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[22usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[23usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[24usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[25usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[26usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[27usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[28usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[29usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[30usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[31usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[32usize], &mut carry);
        r36 = adc(r36, carry2, &mut carry);
        let carry2 = carry;
        let k = r4.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r4, k, MODULUS.0[0], &mut carry);
        r5 = mac_with_carry(r5, k, MODULUS.0[1usize], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[2usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[3usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[4usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[5usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[6usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[7usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[8usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[9usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[10usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[11usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[12usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[13usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[14usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[15usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[16usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[17usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[18usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[19usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[20usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[21usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[22usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[23usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[24usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[25usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[26usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[27usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[28usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[29usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[30usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[31usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[32usize], &mut carry);
        r37 = adc(r37, carry2, &mut carry);
        let carry2 = carry;
        let k = r5.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r5, k, MODULUS.0[0], &mut carry);
        r6 = mac_with_carry(r6, k, MODULUS.0[1usize], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[2usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[3usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[4usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[5usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[6usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[7usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[8usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[9usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[10usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[11usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[12usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[13usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[14usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[15usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[16usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[17usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[18usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[19usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[20usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[21usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[22usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[23usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[24usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[25usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[26usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[27usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[28usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[29usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[30usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[31usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[32usize], &mut carry);
        r38 = adc(r38, carry2, &mut carry);
        let carry2 = carry;
        let k = r6.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r6, k, MODULUS.0[0], &mut carry);
        r7 = mac_with_carry(r7, k, MODULUS.0[1usize], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[2usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[3usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[4usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[5usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[6usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[7usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[8usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[9usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[10usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[11usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[12usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[13usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[14usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[15usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[16usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[17usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[18usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[19usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[20usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[21usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[22usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[23usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[24usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[25usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[26usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[27usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[28usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[29usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[30usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[31usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[32usize], &mut carry);
        r39 = adc(r39, carry2, &mut carry);
        let carry2 = carry;
        let k = r7.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r7, k, MODULUS.0[0], &mut carry);
        r8 = mac_with_carry(r8, k, MODULUS.0[1usize], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[2usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[3usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[4usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[5usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[6usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[7usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[8usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[9usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[10usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[11usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[12usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[13usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[14usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[15usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[16usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[17usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[18usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[19usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[20usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[21usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[22usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[23usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[24usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[25usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[26usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[27usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[28usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[29usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[30usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[31usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[32usize], &mut carry);
        r40 = adc(r40, carry2, &mut carry);
        let carry2 = carry;
        let k = r8.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r8, k, MODULUS.0[0], &mut carry);
        r9 = mac_with_carry(r9, k, MODULUS.0[1usize], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[2usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[3usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[4usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[5usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[6usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[7usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[8usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[9usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[10usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[11usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[12usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[13usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[14usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[15usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[16usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[17usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[18usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[19usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[20usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[21usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[22usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[23usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[24usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[25usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[26usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[27usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[28usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[29usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[30usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[31usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[32usize], &mut carry);
        r41 = adc(r41, carry2, &mut carry);
        let carry2 = carry;
        let k = r9.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r9, k, MODULUS.0[0], &mut carry);
        r10 = mac_with_carry(r10, k, MODULUS.0[1usize], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[2usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[3usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[4usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[5usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[6usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[7usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[8usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[9usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[10usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[11usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[12usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[13usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[14usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[15usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[16usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[17usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[18usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[19usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[20usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[21usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[22usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[23usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[24usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[25usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[26usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[27usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[28usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[29usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[30usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[31usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[32usize], &mut carry);
        r42 = adc(r42, carry2, &mut carry);
        let carry2 = carry;
        let k = r10.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r10, k, MODULUS.0[0], &mut carry);
        r11 = mac_with_carry(r11, k, MODULUS.0[1usize], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[2usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[3usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[4usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[5usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[6usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[7usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[8usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[9usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[10usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[11usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[12usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[13usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[14usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[15usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[16usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[17usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[18usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[19usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[20usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[21usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[22usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[23usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[24usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[25usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[26usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[27usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[28usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[29usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[30usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[31usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[32usize], &mut carry);
        r43 = adc(r43, carry2, &mut carry);
        let carry2 = carry;
        let k = r11.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r11, k, MODULUS.0[0], &mut carry);
        r12 = mac_with_carry(r12, k, MODULUS.0[1usize], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[2usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[3usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[4usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[5usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[6usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[7usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[8usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[9usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[10usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[11usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[12usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[13usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[14usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[15usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[16usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[17usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[18usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[19usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[20usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[21usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[22usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[23usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[24usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[25usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[26usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[27usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[28usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[29usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[30usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[31usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[32usize], &mut carry);
        r44 = adc(r44, carry2, &mut carry);
        let carry2 = carry;
        let k = r12.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r12, k, MODULUS.0[0], &mut carry);
        r13 = mac_with_carry(r13, k, MODULUS.0[1usize], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[2usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[3usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[4usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[5usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[6usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[7usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[8usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[9usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[10usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[11usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[12usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[13usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[14usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[15usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[16usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[17usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[18usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[19usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[20usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[21usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[22usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[23usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[24usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[25usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[26usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[27usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[28usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[29usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[30usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[31usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[32usize], &mut carry);
        r45 = adc(r45, carry2, &mut carry);
        let carry2 = carry;
        let k = r13.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r13, k, MODULUS.0[0], &mut carry);
        r14 = mac_with_carry(r14, k, MODULUS.0[1usize], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[2usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[3usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[4usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[5usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[6usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[7usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[8usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[9usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[10usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[11usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[12usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[13usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[14usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[15usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[16usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[17usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[18usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[19usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[20usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[21usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[22usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[23usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[24usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[25usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[26usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[27usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[28usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[29usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[30usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[31usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[32usize], &mut carry);
        r46 = adc(r46, carry2, &mut carry);
        let carry2 = carry;
        let k = r14.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r14, k, MODULUS.0[0], &mut carry);
        r15 = mac_with_carry(r15, k, MODULUS.0[1usize], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[2usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[3usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[4usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[5usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[6usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[7usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[8usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[9usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[10usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[11usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[12usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[13usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[14usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[15usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[16usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[17usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[18usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[19usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[20usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[21usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[22usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[23usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[24usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[25usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[26usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[27usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[28usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[29usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[30usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[31usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[32usize], &mut carry);
        r47 = adc(r47, carry2, &mut carry);
        let carry2 = carry;
        let k = r15.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r15, k, MODULUS.0[0], &mut carry);
        r16 = mac_with_carry(r16, k, MODULUS.0[1usize], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[2usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[3usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[4usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[5usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[6usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[7usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[8usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[9usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[10usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[11usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[12usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[13usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[14usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[15usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[16usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[17usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[18usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[19usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[20usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[21usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[22usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[23usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[24usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[25usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[26usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[27usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[28usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[29usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[30usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[31usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[32usize], &mut carry);
        r48 = adc(r48, carry2, &mut carry);
        let carry2 = carry;
        let k = r16.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r16, k, MODULUS.0[0], &mut carry);
        r17 = mac_with_carry(r17, k, MODULUS.0[1usize], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[2usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[3usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[4usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[5usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[6usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[7usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[8usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[9usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[10usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[11usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[12usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[13usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[14usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[15usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[16usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[17usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[18usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[19usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[20usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[21usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[22usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[23usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[24usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[25usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[26usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[27usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[28usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[29usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[30usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[31usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[32usize], &mut carry);
        r49 = adc(r49, carry2, &mut carry);
        let carry2 = carry;
        let k = r17.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r17, k, MODULUS.0[0], &mut carry);
        r18 = mac_with_carry(r18, k, MODULUS.0[1usize], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[2usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[3usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[4usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[5usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[6usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[7usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[8usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[9usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[10usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[11usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[12usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[13usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[14usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[15usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[16usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[17usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[18usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[19usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[20usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[21usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[22usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[23usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[24usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[25usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[26usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[27usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[28usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[29usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[30usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[31usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[32usize], &mut carry);
        r50 = adc(r50, carry2, &mut carry);
        let carry2 = carry;
        let k = r18.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r18, k, MODULUS.0[0], &mut carry);
        r19 = mac_with_carry(r19, k, MODULUS.0[1usize], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[2usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[3usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[4usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[5usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[6usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[7usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[8usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[9usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[10usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[11usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[12usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[13usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[14usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[15usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[16usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[17usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[18usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[19usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[20usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[21usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[22usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[23usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[24usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[25usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[26usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[27usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[28usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[29usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[30usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[31usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[32usize], &mut carry);
        r51 = adc(r51, carry2, &mut carry);
        let carry2 = carry;
        let k = r19.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r19, k, MODULUS.0[0], &mut carry);
        r20 = mac_with_carry(r20, k, MODULUS.0[1usize], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[2usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[3usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[4usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[5usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[6usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[7usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[8usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[9usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[10usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[11usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[12usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[13usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[14usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[15usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[16usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[17usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[18usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[19usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[20usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[21usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[22usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[23usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[24usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[25usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[26usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[27usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[28usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[29usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[30usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[31usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[32usize], &mut carry);
        r52 = adc(r52, carry2, &mut carry);
        let carry2 = carry;
        let k = r20.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r20, k, MODULUS.0[0], &mut carry);
        r21 = mac_with_carry(r21, k, MODULUS.0[1usize], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[2usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[3usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[4usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[5usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[6usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[7usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[8usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[9usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[10usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[11usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[12usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[13usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[14usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[15usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[16usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[17usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[18usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[19usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[20usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[21usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[22usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[23usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[24usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[25usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[26usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[27usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[28usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[29usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[30usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[31usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[32usize], &mut carry);
        r53 = adc(r53, carry2, &mut carry);
        let carry2 = carry;
        let k = r21.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r21, k, MODULUS.0[0], &mut carry);
        r22 = mac_with_carry(r22, k, MODULUS.0[1usize], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[2usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[3usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[4usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[5usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[6usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[7usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[8usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[9usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[10usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[11usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[12usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[13usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[14usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[15usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[16usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[17usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[18usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[19usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[20usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[21usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[22usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[23usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[24usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[25usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[26usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[27usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[28usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[29usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[30usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[31usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[32usize], &mut carry);
        r54 = adc(r54, carry2, &mut carry);
        let carry2 = carry;
        let k = r22.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r22, k, MODULUS.0[0], &mut carry);
        r23 = mac_with_carry(r23, k, MODULUS.0[1usize], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[2usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[3usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[4usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[5usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[6usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[7usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[8usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[9usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[10usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[11usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[12usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[13usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[14usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[15usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[16usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[17usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[18usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[19usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[20usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[21usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[22usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[23usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[24usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[25usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[26usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[27usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[28usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[29usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[30usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[31usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[32usize], &mut carry);
        r55 = adc(r55, carry2, &mut carry);
        let carry2 = carry;
        let k = r23.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r23, k, MODULUS.0[0], &mut carry);
        r24 = mac_with_carry(r24, k, MODULUS.0[1usize], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[2usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[3usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[4usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[5usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[6usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[7usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[8usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[9usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[10usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[11usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[12usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[13usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[14usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[15usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[16usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[17usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[18usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[19usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[20usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[21usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[22usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[23usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[24usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[25usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[26usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[27usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[28usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[29usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[30usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[31usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[32usize], &mut carry);
        r56 = adc(r56, carry2, &mut carry);
        let carry2 = carry;
        let k = r24.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r24, k, MODULUS.0[0], &mut carry);
        r25 = mac_with_carry(r25, k, MODULUS.0[1usize], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[2usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[3usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[4usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[5usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[6usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[7usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[8usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[9usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[10usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[11usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[12usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[13usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[14usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[15usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[16usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[17usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[18usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[19usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[20usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[21usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[22usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[23usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[24usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[25usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[26usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[27usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[28usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[29usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[30usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[31usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[32usize], &mut carry);
        r57 = adc(r57, carry2, &mut carry);
        let carry2 = carry;
        let k = r25.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r25, k, MODULUS.0[0], &mut carry);
        r26 = mac_with_carry(r26, k, MODULUS.0[1usize], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[2usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[3usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[4usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[5usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[6usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[7usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[8usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[9usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[10usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[11usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[12usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[13usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[14usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[15usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[16usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[17usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[18usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[19usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[20usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[21usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[22usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[23usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[24usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[25usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[26usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[27usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[28usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[29usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[30usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[31usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[32usize], &mut carry);
        r58 = adc(r58, carry2, &mut carry);
        let carry2 = carry;
        let k = r26.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r26, k, MODULUS.0[0], &mut carry);
        r27 = mac_with_carry(r27, k, MODULUS.0[1usize], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[2usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[3usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[4usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[5usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[6usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[7usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[8usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[9usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[10usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[11usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[12usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[13usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[14usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[15usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[16usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[17usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[18usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[19usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[20usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[21usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[22usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[23usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[24usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[25usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[26usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[27usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[28usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[29usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[30usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[31usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[32usize], &mut carry);
        r59 = adc(r59, carry2, &mut carry);
        let carry2 = carry;
        let k = r27.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r27, k, MODULUS.0[0], &mut carry);
        r28 = mac_with_carry(r28, k, MODULUS.0[1usize], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[2usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[3usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[4usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[5usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[6usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[7usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[8usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[9usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[10usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[11usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[12usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[13usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[14usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[15usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[16usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[17usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[18usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[19usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[20usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[21usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[22usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[23usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[24usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[25usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[26usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[27usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[28usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[29usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[30usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[31usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[32usize], &mut carry);
        r60 = adc(r60, carry2, &mut carry);
        let carry2 = carry;
        let k = r28.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r28, k, MODULUS.0[0], &mut carry);
        r29 = mac_with_carry(r29, k, MODULUS.0[1usize], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[2usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[3usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[4usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[5usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[6usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[7usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[8usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[9usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[10usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[11usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[12usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[13usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[14usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[15usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[16usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[17usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[18usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[19usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[20usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[21usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[22usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[23usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[24usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[25usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[26usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[27usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[28usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[29usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[30usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[31usize], &mut carry);
        r60 = mac_with_carry(r60, k, MODULUS.0[32usize], &mut carry);
        r61 = adc(r61, carry2, &mut carry);
        let carry2 = carry;
        let k = r29.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r29, k, MODULUS.0[0], &mut carry);
        r30 = mac_with_carry(r30, k, MODULUS.0[1usize], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[2usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[3usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[4usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[5usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[6usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[7usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[8usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[9usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[10usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[11usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[12usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[13usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[14usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[15usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[16usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[17usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[18usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[19usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[20usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[21usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[22usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[23usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[24usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[25usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[26usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[27usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[28usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[29usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[30usize], &mut carry);
        r60 = mac_with_carry(r60, k, MODULUS.0[31usize], &mut carry);
        r61 = mac_with_carry(r61, k, MODULUS.0[32usize], &mut carry);
        r62 = adc(r62, carry2, &mut carry);
        let carry2 = carry;
        let k = r30.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r30, k, MODULUS.0[0], &mut carry);
        r31 = mac_with_carry(r31, k, MODULUS.0[1usize], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[2usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[3usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[4usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[5usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[6usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[7usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[8usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[9usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[10usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[11usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[12usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[13usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[14usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[15usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[16usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[17usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[18usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[19usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[20usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[21usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[22usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[23usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[24usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[25usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[26usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[27usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[28usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[29usize], &mut carry);
        r60 = mac_with_carry(r60, k, MODULUS.0[30usize], &mut carry);
        r61 = mac_with_carry(r61, k, MODULUS.0[31usize], &mut carry);
        r62 = mac_with_carry(r62, k, MODULUS.0[32usize], &mut carry);
        r63 = adc(r63, carry2, &mut carry);
        let carry2 = carry;
        let k = r31.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r31, k, MODULUS.0[0], &mut carry);
        r32 = mac_with_carry(r32, k, MODULUS.0[1usize], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[2usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[3usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[4usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[5usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[6usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[7usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[8usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[9usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[10usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[11usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[12usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[13usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[14usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[15usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[16usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[17usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[18usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[19usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[20usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[21usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[22usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[23usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[24usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[25usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[26usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[27usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[28usize], &mut carry);
        r60 = mac_with_carry(r60, k, MODULUS.0[29usize], &mut carry);
        r61 = mac_with_carry(r61, k, MODULUS.0[30usize], &mut carry);
        r62 = mac_with_carry(r62, k, MODULUS.0[31usize], &mut carry);
        r63 = mac_with_carry(r63, k, MODULUS.0[32usize], &mut carry);
        r64 = adc(r64, carry2, &mut carry);
        let carry2 = carry;
        let k = r32.wrapping_mul(INV);
        let mut carry = 0;
        mac_with_carry(r32, k, MODULUS.0[0], &mut carry);
        r33 = mac_with_carry(r33, k, MODULUS.0[1usize], &mut carry);
        r34 = mac_with_carry(r34, k, MODULUS.0[2usize], &mut carry);
        r35 = mac_with_carry(r35, k, MODULUS.0[3usize], &mut carry);
        r36 = mac_with_carry(r36, k, MODULUS.0[4usize], &mut carry);
        r37 = mac_with_carry(r37, k, MODULUS.0[5usize], &mut carry);
        r38 = mac_with_carry(r38, k, MODULUS.0[6usize], &mut carry);
        r39 = mac_with_carry(r39, k, MODULUS.0[7usize], &mut carry);
        r40 = mac_with_carry(r40, k, MODULUS.0[8usize], &mut carry);
        r41 = mac_with_carry(r41, k, MODULUS.0[9usize], &mut carry);
        r42 = mac_with_carry(r42, k, MODULUS.0[10usize], &mut carry);
        r43 = mac_with_carry(r43, k, MODULUS.0[11usize], &mut carry);
        r44 = mac_with_carry(r44, k, MODULUS.0[12usize], &mut carry);
        r45 = mac_with_carry(r45, k, MODULUS.0[13usize], &mut carry);
        r46 = mac_with_carry(r46, k, MODULUS.0[14usize], &mut carry);
        r47 = mac_with_carry(r47, k, MODULUS.0[15usize], &mut carry);
        r48 = mac_with_carry(r48, k, MODULUS.0[16usize], &mut carry);
        r49 = mac_with_carry(r49, k, MODULUS.0[17usize], &mut carry);
        r50 = mac_with_carry(r50, k, MODULUS.0[18usize], &mut carry);
        r51 = mac_with_carry(r51, k, MODULUS.0[19usize], &mut carry);
        r52 = mac_with_carry(r52, k, MODULUS.0[20usize], &mut carry);
        r53 = mac_with_carry(r53, k, MODULUS.0[21usize], &mut carry);
        r54 = mac_with_carry(r54, k, MODULUS.0[22usize], &mut carry);
        r55 = mac_with_carry(r55, k, MODULUS.0[23usize], &mut carry);
        r56 = mac_with_carry(r56, k, MODULUS.0[24usize], &mut carry);
        r57 = mac_with_carry(r57, k, MODULUS.0[25usize], &mut carry);
        r58 = mac_with_carry(r58, k, MODULUS.0[26usize], &mut carry);
        r59 = mac_with_carry(r59, k, MODULUS.0[27usize], &mut carry);
        r60 = mac_with_carry(r60, k, MODULUS.0[28usize], &mut carry);
        r61 = mac_with_carry(r61, k, MODULUS.0[29usize], &mut carry);
        r62 = mac_with_carry(r62, k, MODULUS.0[30usize], &mut carry);
        r63 = mac_with_carry(r63, k, MODULUS.0[31usize], &mut carry);
        r64 = mac_with_carry(r64, k, MODULUS.0[32usize], &mut carry);
        r65 = adc(r65, carry2, &mut carry);
        (self.0).0[0usize] = r33;
        (self.0).0[1usize] = r34;
        (self.0).0[2usize] = r35;
        (self.0).0[3usize] = r36;
        (self.0).0[4usize] = r37;
        (self.0).0[5usize] = r38;
        (self.0).0[6usize] = r39;
        (self.0).0[7usize] = r40;
        (self.0).0[8usize] = r41;
        (self.0).0[9usize] = r42;
        (self.0).0[10usize] = r43;
        (self.0).0[11usize] = r44;
        (self.0).0[12usize] = r45;
        (self.0).0[13usize] = r46;
        (self.0).0[14usize] = r47;
        (self.0).0[15usize] = r48;
        (self.0).0[16usize] = r49;
        (self.0).0[17usize] = r50;
        (self.0).0[18usize] = r51;
        (self.0).0[19usize] = r52;
        (self.0).0[20usize] = r53;
        (self.0).0[21usize] = r54;
        (self.0).0[22usize] = r55;
        (self.0).0[23usize] = r56;
        (self.0).0[24usize] = r57;
        (self.0).0[25usize] = r58;
        (self.0).0[26usize] = r59;
        (self.0).0[27usize] = r60;
        (self.0).0[28usize] = r61;
        (self.0).0[29usize] = r62;
        (self.0).0[30usize] = r63;
        (self.0).0[31usize] = r64;
        (self.0).0[32usize] = r65;
        self.reduce();
    }
}

impl Add for Fp {
    type Output = Self;

    #[inline]
    fn add(self, other: Self) -> Self {
        let mut result = self.clone();
        result.add_assign(&other);
        result
    }
}

impl Sub for Fp {
    type Output = Self;

    #[inline]
    fn sub(self, other: Self) -> Self {
        let mut result = self.clone();
        result.sub_assign(&other);
        result
    }
}

impl Mul for Fp {
    type Output = Self;

    #[inline]
    fn mul(self, other: Self) -> Self {
        let mut result = self.clone();
        result.mul_assign(&other);
        result
    }
}

impl Div for Fp {
    type Output = Self;

    #[inline]
    fn div(self, other: Self) -> Self {
        let mut result = self.clone();
        result.mul_assign(&other.inverse().unwrap());
        result
    }
}

impl Neg for Fp {
    type Output = Self;

    #[inline]
    #[must_use]
    fn neg(self) -> Self {
        if !self.is_zero() {
            let mut result = self.clone();
            result.negate();
            result
        } else {
            self
        }
    }
}


impl ::rand::Rand for Fp {
    #[doc = r" Computes a uniformly random element using rejection sampling."]
    fn rand<R: ::rand::Rng>(rng: &mut R) -> Self {
        loop  {
            let mut tmp = Fp(BigInteger::rand(rng));
            for _ in 0..REPR_SHAVE_BITS { tmp.0.div2(); }
            if tmp.is_valid() { return tmp }
        }
    }
}

impl PartialEq for Fp {
    fn eq(&self, other: &Fp) -> bool {
        self.0 == other.0
    }
}

impl Eq for Fp {}

impl Copy for Fp {}

impl Clone for Fp {
    fn clone(&self) -> Fp {
        *self
    }
}
